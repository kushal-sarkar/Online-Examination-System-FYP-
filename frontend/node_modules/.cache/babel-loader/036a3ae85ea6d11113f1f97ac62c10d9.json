{"ast":null,"code":"import apis from '../services/Apis';\nimport Alert from '../components/common/alert';\nimport { SecurePost } from '../services/axiosCall';\nexport const changeStep = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_ACTIVE_STEP',\n    payload: d\n  });\n};\nexport const changeBasicNewTestDetails = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_BASIC_NEW_TEST_DETAILS',\n    payload: d\n  });\n};\nexport const pushQuestionToQueue = d => dispatch => {\n  dispatch({\n    type: 'ADD_QUESTION_TO_QUESTION_QUEUSE',\n    payload: d\n  });\n};\nexport const removeQuestionFromMainQueue = d => dispatch => {\n  dispatch({\n    type: 'REMOVE_QUESTION_FROM_MAIN_QUEUE',\n    payload: d\n  });\n};\nexport const changeMode = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_MODE_QUESTION_SELECT',\n    payload: d\n  });\n};\nexport const fetchSubjectWiseQuestion = d => dispatch => {\n  SecurePost({\n    url: \"\".concat(apis.GET_ALL_QUESTIONS),\n    data: {\n      subject: d\n    }\n  }).then(response => {\n    console.log(response);\n\n    if (response.data.success) {\n      dispatch({\n        type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\n        payload: response.data.data\n      });\n    } else {\n      Alert('error', 'Error!', response.data.message);\n      dispatch({\n        type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\n        payload: []\n      });\n    }\n  }).catch(error => {\n    Alert('error', 'Error!', 'Server Error');\n    dispatch({\n      type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\n      payload: []\n    });\n  });\n};","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\actions\\testAction.js"],"names":["apis","Alert","SecurePost","changeStep","d","dispatch","type","payload","changeBasicNewTestDetails","pushQuestionToQueue","removeQuestionFromMainQueue","changeMode","fetchSubjectWiseQuestion","url","GET_ALL_QUESTIONS","data","subject","then","response","console","log","success","message","catch","error"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAO,MAAMC,UAAU,GAAIC,CAAD,IAAMC,QAAQ,IAAG;AACvCA,EAAAA,QAAQ,CAAC;AACNC,IAAAA,IAAI,EAAG,oBADD;AAENC,IAAAA,OAAO,EAAGH;AAFJ,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMI,yBAAyB,GAAIJ,CAAD,IAAMC,QAAQ,IAAG;AACtDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,+BADD;AAELC,IAAAA,OAAO,EAACH;AAFH,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMK,mBAAmB,GAAIL,CAAD,IAAMC,QAAQ,IAAG;AAChDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAACH;AAFH,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMM,2BAA2B,GAAIN,CAAD,IAAMC,QAAQ,IAAG;AACxDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAACH;AAFH,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMO,UAAU,GAAIP,CAAD,IAAMC,QAAQ,IAAG;AACvCA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAG,6BADF;AAELC,IAAAA,OAAO,EAACH;AAFH,GAAD,CAAR;AAIH,CALM;AASP,OAAO,MAAMQ,wBAAwB,GAAIR,CAAD,IAAOC,QAAQ,IAAG;AACtDH,EAAAA,UAAU,CAAC;AACPW,IAAAA,GAAG,YAAMb,IAAI,CAACc,iBAAX,CADI;AAEPC,IAAAA,IAAI,EAAC;AACDC,MAAAA,OAAO,EAAGZ;AADT;AAFE,GAAD,CAAV,CAKGa,IALH,CAKSC,QAAD,IAAY;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAGA,QAAQ,CAACH,IAAT,CAAcM,OAAjB,EAAyB;AACrBhB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAG,kCADF;AAELC,QAAAA,OAAO,EAAGW,QAAQ,CAACH,IAAT,CAAcA;AAFnB,OAAD,CAAR;AAIH,KALD,MAMI;AACAd,MAAAA,KAAK,CAAC,OAAD,EAAS,QAAT,EAAkBiB,QAAQ,CAACH,IAAT,CAAcO,OAAhC,CAAL;AACAjB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAG,kCADF;AAELC,QAAAA,OAAO,EAAC;AAFH,OAAD,CAAR;AAIH;AACJ,GApBD,EAoBGgB,KApBH,CAoBUC,KAAD,IAAS;AACdvB,IAAAA,KAAK,CAAC,OAAD,EAAS,QAAT,EAAkB,cAAlB,CAAL;AACAI,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAG,kCADF;AAELC,MAAAA,OAAO,EAAC;AAFH,KAAD,CAAR;AAIH,GA1BD;AA2BH,CA5BM","sourcesContent":["import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\nexport const changeStep = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_STEP',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeBasicNewTestDetails = (d)=> dispatch =>{\r\n    dispatch({\r\n        type: 'CHANGE_BASIC_NEW_TEST_DETAILS',\r\n        payload:d\r\n    })\r\n}\r\n\r\nexport const pushQuestionToQueue = (d)=> dispatch =>{\r\n    dispatch({\r\n        type: 'ADD_QUESTION_TO_QUESTION_QUEUSE',\r\n        payload:d\r\n    })\r\n}\r\n\r\nexport const removeQuestionFromMainQueue = (d)=> dispatch =>{\r\n    dispatch({\r\n        type: 'REMOVE_QUESTION_FROM_MAIN_QUEUE',\r\n        payload:d\r\n    })\r\n}\r\n\r\nexport const changeMode = (d)=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_MODE_QUESTION_SELECT',\r\n        payload:d\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const fetchSubjectWiseQuestion = (d) => dispatch =>{\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_QUESTIONS}`,\r\n        data:{\r\n            subject : d\r\n        }\r\n    }).then((response)=>{\r\n        console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload:[]\r\n            })\r\n        }\r\n    }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n            payload:[]\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}