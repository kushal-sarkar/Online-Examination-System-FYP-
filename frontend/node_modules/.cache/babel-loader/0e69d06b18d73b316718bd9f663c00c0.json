{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainee\\\\examPortal\\\\operations.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Icon, Button, Row, Col } from 'antd';\nimport './portal.css';\nimport { switchQuestion } from '../../../actions/traineeAction';\n\nclass Operations extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"question-list-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"question-list-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.trainee.answers.map((d, i) => {\n      return React.createElement(Col, {\n        key: i,\n        span: 6,\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Mark, {\n        qid: d.questionid,\n        ans: d.isAnswered,\n        mark: d.isMarked,\n        no: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n}\n\nfunction mark(props) {\n  if (props.mark) {\n    if (props.ans) {\n      return React.createElement(Badge, {\n        className: \"qb\",\n        count: React.createElement(Icon, {\n          type: \"flag\",\n          theme: \"filled\",\n          style: {\n            color: '#f5222d'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => props.switchQuestion(props.no),\n        style: {\n          background: '#0B6623',\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, props.no + 1));\n    } else {\n      return React.createElement(Badge, {\n        className: \"qb\",\n        count: React.createElement(Icon, {\n          type: \"flag\",\n          theme: \"filled\",\n          style: {\n            color: '#f5222d'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => props.switchQuestion(props.no),\n        style: {\n          background: '#999999',\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, props.no + 1));\n    }\n  } else {\n    if (props.ans) {\n      return React.createElement(Button, {\n        onClick: () => props.switchQuestion(props.no),\n        className: \"qb\",\n        style: {\n          background: '#0B6623',\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, props.no + 1);\n    } else {\n      return React.createElement(Button, {\n        onClick: () => props.switchQuestion(props.no),\n        className: \"qb\",\n        style: {\n          background: '#999999',\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, props.no + 1);\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  trainee: state.trainee\n});\n\nlet Mark = connect(mapStateToProps, {\n  switchQuestion\n})(mark);\nexport default connect(mapStateToProps, null)(Operations);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainee\\examPortal\\operations.js"],"names":["React","Component","connect","Badge","Icon","Button","Row","Col","switchQuestion","Operations","render","padding","props","trainee","answers","map","d","i","questionid","isAnswered","isMarked","mark","ans","color","no","background","mapStateToProps","state","Mark"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Badge, Icon,Button,Row,Col  } from 'antd';\r\nimport './portal.css';\r\nimport {switchQuestion} from '../../../actions/traineeAction';\r\n\r\nclass Operations extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"question-list-wrapper\">\r\n                <div className=\"question-list-inner\">\r\n                    <Row style={{padding:'5px'}}>\r\n                        {this.props.trainee.answers.map((d,i)=>{\r\n                            return(\r\n                                <Col key={i} span={6} style={{padding:'10px'}}>\r\n                                    <Mark qid={d.questionid} ans={d.isAnswered}  mark={d.isMarked} no={i}/>\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction mark(props){\r\n    if(props.mark){\r\n        if(props.ans){\r\n            return(\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\"  theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button onClick={()=>props.switchQuestion(props.no)} style={{background:'#0B6623',color:'#fff'}}>{props.no+1}</Button>\r\n                </Badge>  \r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\"  theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button onClick={()=>props.switchQuestion(props.no)} style={{background:'#999999',color:'#fff'}}>{props.no+1}</Button>\r\n                </Badge>  \r\n            )\r\n        }\r\n        \r\n    }\r\n    else{\r\n        if(props.ans){\r\n            return(\r\n                <Button onClick={()=>props.switchQuestion(props.no)} className=\"qb\" style={{background:'#0B6623',color:'#fff'}}>{props.no+1}</Button>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Button onClick={()=>props.switchQuestion(props.no)} className=\"qb\" style={{background:'#999999',color:'#fff'}}>{props.no+1}</Button>\r\n            )\r\n        }\r\n        \r\n        \r\n    }    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\n\r\n\r\nlet Mark=connect(mapStateToProps,{\r\n    switchQuestion\r\n})(mark);\r\n\r\nexport default connect(mapStateToProps,null)(Operations);"]},"metadata":{},"sourceType":"module"}