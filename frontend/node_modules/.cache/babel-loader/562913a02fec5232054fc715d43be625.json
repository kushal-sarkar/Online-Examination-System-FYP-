{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\admin\\\\newTopics\\\\newtopics.js\";\nimport React, { Component } from 'react';\nimport './newtopic.css';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../../components/common/alert';\nimport { ChangeSubjectConfirmDirty, ChangeSubjectTableData, ChangeSubjectModalState } from '../../../actions/adminAction';\n\nclass NewTopics extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          SecurePost({\n            url: \"\".concat(apis.CREATE_SUBJECT),\n            data: {\n              _id: this.props.admin.SubjectId,\n              topic: values.topic\n            }\n          }).then(response => {\n            if (response.data.success) {\n              this.props.ChangeSubjectModalState(false, null, 'New Topic');\n              Alert('success', 'Success', response.data.message);\n              this.props.ChangeSubjectTableData();\n            } else {\n              this.props.ChangeSubjectModalState(false, null, 'New Topic');\n              return Alert('warning', 'Warning!', response.data.message);\n            }\n          }).catch(error => {\n            this.props.ChangeSubjectModalState(false, null, 'New Topic');\n            return Alert('error', 'Error!', 'Server Error');\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"register-subject-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-trainer-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Topic Name\",\n      hasFeedback: true,\n      className: \"input-admin-trainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, getFieldDecorator('topic', {\n      initialValue: this.props.admin.subjectDetails.topic,\n      rules: [{\n        required: true,\n        message: 'Please input topic name!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.admin.Subjectmode)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst NewSubjectForm = Form.create({\n  name: 'register'\n})(NewTopics);\nexport default connect(mapStateToProps, {\n  ChangeSubjectConfirmDirty,\n  ChangeSubjectTableData,\n  ChangeSubjectModalState\n})(NewSubjectForm);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\admin\\newTopics\\newtopics.js"],"names":["React","Component","Form","Input","Button","connect","SecurePost","apis","Alert","ChangeSubjectConfirmDirty","ChangeSubjectTableData","ChangeSubjectModalState","NewTopics","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","url","CREATE_SUBJECT","data","_id","admin","SubjectId","topic","then","response","success","message","catch","error","render","getFieldDecorator","initialValue","subjectDetails","rules","required","whitespace","Subjectmode","mapStateToProps","state","NewSubjectForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './newtopic.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport { \r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\n\r\nclass NewTopics extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url : `${apis.CREATE_SUBJECT}`,\r\n                    data : {\r\n                        _id : this.props.admin.SubjectId,\r\n                        topic : values.topic\r\n                    }\r\n                }).then((response)=>{\r\n                    if(response.data.success){\r\n                        this.props.ChangeSubjectModalState(false,null,'New Topic');\r\n                        Alert('success','Success',response.data.message);\r\n                        this.props.ChangeSubjectTableData();\r\n                    }\r\n                    else{\r\n                        this.props.ChangeSubjectModalState(false,null,'New Topic');\r\n                        return Alert('warning','Warning!',response.data.message);\r\n                    }\r\n                }).catch((error)=>{\r\n                    this.props.ChangeSubjectModalState(false,null,'New Topic');\r\n                    return Alert('error','Error!','Server Error');\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Topic Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue : this.props.admin.subjectDetails.topic,\r\n                                rules: [{ required: true, message: 'Please input topic name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Subjectmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewSubjectForm = Form.create({ name: 'register' })(NewTopics);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(NewSubjectForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}