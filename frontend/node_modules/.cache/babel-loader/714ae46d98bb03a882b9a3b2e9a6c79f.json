{"ast":null,"code":"import apis from '../services/Apis';\nimport Alert from '../components/common/alert';\nimport { SecurePost } from '../services/axiosCall';\nexport const ChangeQuestionModalState = d1 => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_MODAL_STATE',\n    payload1: d1\n  });\n};\nexport const ChangeQuestionConfirmDirty = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_FORM_CONFIRMDIRTY',\n    payload: d\n  });\n};\nexport const ChangeQuestionSearchText = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_SEARCH_TEXT',\n    payload: d\n  });\n};\nexport const ChangeQuestionTableData = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\n    payload1: true,\n    payload2: []\n  });\n  SecurePost({\n    url: \"\".concat(apis.GET_ALL_QUESTIONS),\n    data: {\n      subject: d\n    }\n  }).then(response => {\n    console.log(response);\n\n    if (response.data.success) {\n      dispatch({\n        type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: response.data.data\n      });\n    } else {\n      Alert('error', 'Error!', response.data.message);\n      dispatch({\n        type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: []\n      });\n    }\n  }).catch(error => {\n    Alert('error', 'Error!', 'Server Error');\n    dispatch({\n      type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\n      payload1: false,\n      payload2: []\n    });\n  });\n};\nexport const ChangeSelectedSubjects = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_SELECTED_SUBJECT',\n    payload: d\n  });\n};\nexport const ChangeQuestionFormData = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_QUESTION_FORM_DATA',\n    payload: d\n  });\n};\nexport const AddFifthOptionInQuestion = () => dispatch => {\n  dispatch({\n    type: 'ADD_FIFTH_OPTION'\n  });\n};\nexport const ChangeTestDetailsModalState = (d1, d2) => dispatch => {\n  dispatch({\n    type: 'CHANGE_TEST_DETAILS_MODAL_STATE',\n    payload1: d1,\n    payload2: d2\n  });\n};\nexport const ChangeTestSearchText = d => dispatch => {\n  dispatch({\n    type: 'CHANGE_TEST_SEARCH_TEXT',\n    payload: d\n  });\n};\nexport const ChangeTestTableData = () => dispatch => {\n  dispatch({\n    type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\n    payload1: true,\n    payload2: []\n  });\n  SecurePost({\n    url: \"\".concat(apis.GET_ALL_TESTS)\n  }).then(response => {\n    console.log(response.data);\n\n    if (response.data.success) {\n      dispatch({\n        type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: response.data.data\n      });\n    } else {\n      Alert('error', 'Error!', response.data.message);\n      dispatch({\n        type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\n        payload1: false,\n        payload2: []\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n    Alert('error', 'Error!', 'Server Error');\n    dispatch({\n      type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\n      payload1: false,\n      payload2: []\n    });\n  });\n};\nexport const updateQuestiosnActiveTest = d => {\n  return {\n    type: 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION',\n    payload: d\n  };\n};","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\actions\\trainerAction.js"],"names":["apis","Alert","SecurePost","ChangeQuestionModalState","d1","dispatch","type","payload1","ChangeQuestionConfirmDirty","d","payload","ChangeQuestionSearchText","ChangeQuestionTableData","payload2","url","GET_ALL_QUESTIONS","data","subject","then","response","console","log","success","message","catch","error","ChangeSelectedSubjects","ChangeQuestionFormData","AddFifthOptionInQuestion","ChangeTestDetailsModalState","d2","ChangeTestSearchText","ChangeTestTableData","GET_ALL_TESTS","updateQuestiosnActiveTest"],"mappings":"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","sourcesContent":["import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\n\r\nexport const ChangeQuestionModalState = (d1)=> dispatch =>{\r\n        dispatch({\r\n            type : 'CHANGE_QUESTION_MODAL_STATE',\r\n            payload1 : d1,\r\n        })\r\n    }\r\n    \r\n\r\nexport const ChangeQuestionConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeQuestionSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeQuestionTableData = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n       payload1 : true,\r\n       payload2:[]\r\n    });\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_QUESTIONS}`,\r\n        data:{\r\n            subject : d\r\n        }\r\n    }).then((response)=>{\r\n        console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n    }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport const ChangeSelectedSubjects = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SELECTED_SUBJECT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeQuestionFormData = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_FORM_DATA',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const AddFifthOptionInQuestion = ()=> dispatch =>{\r\n    dispatch({\r\n       type : 'ADD_FIFTH_OPTION'\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const ChangeTestDetailsModalState = (d1,d2)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TEST_DETAILS_MODAL_STATE',\r\n       payload1 : d1,\r\n       payload2 : d2\r\n    })\r\n}\r\n\r\nexport const ChangeTestSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TEST_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeTestTableData = ()=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n        payload1 : true,\r\n        payload2:[]\r\n    });\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_TESTS}`,\r\n    }).then((response)=>{\r\n        console.log(response.data);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n    }\r\n    }).catch((error)=>{\r\n        console.log(error);\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n}\r\n\r\nexport const updateQuestiosnActiveTest = (d)=>{\r\n    return{\r\n        type:'CHANGE_CURRENT_ACTIVE_TEST_QUESTION',\r\n        payload:d\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}