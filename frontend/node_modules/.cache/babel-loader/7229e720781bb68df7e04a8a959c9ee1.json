{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainer\\\\newtest\\\\questionview.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button } from 'antd';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../common/alert';\nimport { Redirect } from 'react-router-dom';\n\nclass FinalQuestionView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createtest = () => {\n      SecurePost({\n        url: apis.CREATE_TEST,\n        data: {\n          type: this.props.test.newtestFormData.testType,\n          title: this.props.test.newtestFormData.testTitle,\n          questions: this.props.test.newtestFormData.testQuestions,\n          duration: this.props.test.newtestFormData.testDuration,\n          subjects: this.props.test.newtestFormData.testSubject,\n          organisation: this.props.test.newtestFormData.OrganisationName\n        }\n      }).then(response => {\n        console.log(response.data);\n\n        if (response.data.success) {\n          Alert('success', 'Test paper Created Successfully!', 'Please wait, you will automatically be redirected to conduct test page.');\n          setTimeout(() => {\n            this.setState({\n              testid: response.data.testid\n            });\n          }, 3000);\n        } else {\n          Alert('error', 'Error!', response.data.message);\n        }\n      }).catch(err => {\n        console.log(err);\n        Alert('error', 'Error!', 'Server Error');\n      });\n    };\n\n    this.state = {\n      testid: null\n    };\n  }\n\n  render() {\n    if (this.state.testid) {\n      return React.createElement(Redirect, {\n        to: \"/user/conducttest?testid=\".concat(this.state.testid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.test.newtestFormData.testQuestions.map((d, i) => {\n        return React.createElement(Q, {\n          key: i + 1,\n          _id: d,\n          no: i + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          float: 'right'\n        },\n        type: \"primary\",\n        onClick: this.createtest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Create Test\")));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  test: state.test\n});\n\nexport default connect(mapStateToProps, null)(FinalQuestionView);\n\nfunction QuestionView(props) {\n  var _id = props._id;\n  var no = props.no;\n  var obj = props.test.questionsAvailablebasedonSubject.filter(hero => {\n    return hero._id == _id;\n  });\n  console.log(obj[0].weightage);\n  var oo = ['A', 'B', 'C', 'D', 'E'];\n  return React.createElement(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Question No. \", no, \")\"), React.createElement(\"b\", {\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Marks. \", obj[0].weightage)), React.createElement(\"div\", {\n    style: {\n      padding: '5px 20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), obj[0].body, obj[0].quesimg ? React.createElement(\"img\", {\n    alt: \"Question\",\n    src: obj[0].quesimg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }) : null)), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, obj[0].options.map((d, i) => {\n    return React.createElement(Col, {\n      key: i,\n      span: 12,\n      style: {\n        padding: '5px 20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, oo[i], \" ) \"), \" \", d.optbody, d.optimg ? React.createElement(\"img\", {\n      alt: \"Option\",\n      src: d.optimg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }) : null);\n  })));\n}\n\nvar Q = connect(mapStateToProps, null)(QuestionView);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainer\\newtest\\questionview.js"],"names":["React","connect","Row","Col","Button","SecurePost","apis","Alert","Redirect","FinalQuestionView","Component","constructor","props","createtest","url","CREATE_TEST","data","type","test","newtestFormData","testType","title","testTitle","questions","testQuestions","duration","testDuration","subjects","testSubject","organisation","OrganisationName","then","response","console","log","success","setTimeout","setState","testid","message","catch","err","state","render","map","d","i","width","padding","float","mapStateToProps","QuestionView","_id","no","obj","questionsAvailablebasedonSubject","filter","hero","weightage","oo","marginBottom","body","quesimg","options","optbody","optimg","Q"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row,Col,Button, } from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\nclass FinalQuestionView extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            testid:null\r\n        }\r\n    }\r\n\r\n    createtest =()=>{\r\n        SecurePost({\r\n            url :apis.CREATE_TEST,\r\n            data : {\r\n                type : this.props.test.newtestFormData.testType,\r\n                title : this.props.test.newtestFormData.testTitle,\r\n                questions : this.props.test.newtestFormData.testQuestions,\r\n                duration : this.props.test.newtestFormData.testDuration,\r\n                subjects : this.props.test.newtestFormData.testSubject,\r\n                organisation : this.props.test.newtestFormData.OrganisationName\r\n            }\r\n        }).then((response)=>{\r\n            console.log(response.data);\r\n            if(response.data.success){\r\n                Alert('success','Test paper Created Successfully!','Please wait, you will automatically be redirected to conduct test page.');\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        testid : response.data.testid\r\n                    })\r\n                },3000);\r\n            }\r\n            else{\r\n                Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.testid){\r\n            return <Redirect to={`/user/conducttest?testid=${this.state.testid}`} />\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    {this.props.test.newtestFormData.testQuestions.map((d,i)=>{\r\n                        return <Q key={i+1} _id={d} no={i+1}/>\r\n                    })}\r\n                    <div style={{width:'100%',padding:'10px'}}>\r\n                        <Button style={{float:'right'}} type=\"primary\" onClick={this.createtest}>\r\n                            Create Test\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,null)(FinalQuestionView);\r\n\r\n\r\n\r\nfunction QuestionView(props) {\r\n    var _id=props._id;\r\n    var no = props.no;\r\n    var obj = props.test.questionsAvailablebasedonSubject.filter((hero)=>{\r\n        return hero._id==_id;\r\n    })\r\n    console.log(obj[0].weightage);\r\n    var oo = ['A','B','C','D','E'];\r\n    return (\r\n        <div style={{marginBottom:'20px'}}>\r\n            <div>\r\n                <div style={{width:'100%'}}>\r\n                    <b style={{float:'left'}}>Question No. {no})</b>\r\n                    <b style={{float:'right'}}>Marks. {obj[0].weightage}</b>\r\n                </div>\r\n                <div style={{padding:'5px 20px'}}>\r\n                    <br/>\r\n                    {obj[0].body}\r\n                    {obj[0].quesimg? <img alt=\"Question\" src={obj[0].quesimg} /> : null}\r\n                </div>\r\n            </div>\r\n            <Row>\r\n                {obj[0].options.map((d,i)=>{\r\n                    return(\r\n                        <Col key={i} span={12} style={{padding:'5px 20px'}}>\r\n                            <b>{oo[i]} ) </b> {d.optbody}\r\n                            {d.optimg? <img alt=\"Option\" src={d.optimg} /> : null}\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar Q = connect(mapStateToProps,null)(QuestionView);"]},"metadata":{},"sourceType":"module"}