{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainer\\\\conducttest\\\\conducttest.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button, Typography, Tabs, Icon } from 'antd';\nimport './conducttes.css';\nimport { changeConducttestId, updateCandidatesTest, updateQuestiosnTest } from '../../../actions/conductTest';\nimport TestDetails from './details';\nimport Candidates from './candidates';\nimport Questions from './questions';\nconst Title = Typography.Title;\nconst TabPane = Tabs.TabPane;\n\nclass ConductTestS extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ChangeLocalTestId = d => {\n      this.setState({\n        localTestId: d.target.value\n      });\n    };\n\n    this.ChangetestId = d => {\n      this.setState({\n        needRedirect: true\n      });\n    };\n\n    this.props.changeConducttestId(this.props.testid);\n    this.state = {\n      localTestId: null,\n      needRedirect: false\n    };\n  }\n\n  render() {\n    if (this.state.needRedirect) {\n      return window.location.href = \"/user/conducttest?testid=\".concat(this.state.localTestId);\n    } else {\n      return React.createElement(\"div\", {\n        className: \"conduct-test-main-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, !this.props.conduct.id ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Title, {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        level: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Enter Test Id\"), React.createElement(\"div\", {\n        className: \"test-conduct-testid-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Enter test id\",\n        onChange: this.ChangeLocalTestId,\n        value: this.state.localTestId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.ChangetestId,\n        type: \"primary\",\n        style: {\n          marginTop: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Proceed\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(CC, {\n        key: this.props.conduct.basictestdetails.testconducted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nclass C extends Component {\n  render() {\n    console.log(this.props.conduct.basictestdetails.testconducted);\n\n    if (this.props.conduct.basictestdetails.testconducted) {\n      return React.createElement(\"div\", {\n        className: \"reasendmail-container-register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Title, {\n        style: {\n          color: '#fff'\n        },\n        level: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"The Test has ended! Go to all tests to check the results\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(TestDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        style: {\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), \"Registered Trainee\"),\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Candidates, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tab: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), \"Questions\"),\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Questions, {\n        id: this.props.conduct.id,\n        questionsOfTest: this.props.conduct.questionsOfTest,\n        updateQuestiosnTest: this.props.updateQuestiosnTest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trainer: state.trainer,\n  conduct: state.conduct\n});\n\nlet CC = connect(mapStateToProps, {\n  changeConducttestId,\n  updateCandidatesTest,\n  updateQuestiosnTest\n})(C);\nexport default connect(mapStateToProps, {\n  changeConducttestId,\n  updateCandidatesTest,\n  updateQuestiosnTest\n})(ConductTestS);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainer\\conducttest\\conducttest.js"],"names":["React","Component","connect","Input","Button","Typography","Tabs","Icon","changeConducttestId","updateCandidatesTest","updateQuestiosnTest","TestDetails","Candidates","Questions","Title","TabPane","ConductTestS","constructor","props","ChangeLocalTestId","d","setState","localTestId","target","value","ChangetestId","needRedirect","testid","state","render","window","location","href","conduct","id","width","textAlign","marginTop","basictestdetails","testconducted","C","console","log","color","questionsOfTest","mapStateToProps","trainer","CC"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input,Button, Typography,Tabs, Icon  } from 'antd';\r\nimport './conducttes.css';\r\nimport { changeConducttestId, updateCandidatesTest,updateQuestiosnTest } from '../../../actions/conductTest';\r\nimport TestDetails from './details';\r\nimport Candidates from './candidates';\r\nimport Questions from './questions';\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass ConductTestS extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.changeConducttestId(this.props.testid);\r\n        this.state={\r\n            localTestId:null,\r\n            needRedirect:false\r\n        }\r\n    }\r\n\r\n    ChangeLocalTestId = (d)=>{\r\n        this.setState({\r\n            localTestId : d.target.value\r\n        })\r\n    }\r\n\r\n    ChangetestId = (d)=>{\r\n        this.setState({\r\n            needRedirect:true\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.needRedirect){\r\n            return window.location.href=`/user/conducttest?testid=${this.state.localTestId}`\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"conduct-test-main-wrapper\">\r\n                    {!this.props.conduct.id ? \r\n                    <div>\r\n                        <Title style={{width:'100%',textAlign:'center'}} level={4}>Enter Test Id</Title>\r\n                        <div className=\"test-conduct-testid-form\">\r\n                            <Input placeholder=\"Enter test id\" onChange={this.ChangeLocalTestId} value={this.state.localTestId}/>\r\n                            <Button onClick={this.ChangetestId}  type=\"primary\" style={{marginTop:'30px'}}>Proceed</Button>\r\n                        </div>\r\n                    </div>:\r\n                    <div>\r\n                        <CC key={this.props.conduct.basictestdetails.testconducted} />\r\n                    </div>}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nclass C extends Component {\r\n    render() {\r\n        console.log(this.props.conduct.basictestdetails.testconducted);\r\n        if(this.props.conduct.basictestdetails.testconducted){\r\n            return(\r\n                <div className=\"reasendmail-container-register\">\r\n                    <Title style={{color:'#fff'}} level={4}>The Test has ended! Go to all tests to check the results</Title>    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <TestDetails/>\r\n                    <Tabs defaultActiveKey=\"1\" style={{marginTop:'20px'}}>\r\n                        <TabPane tab={<span><Icon type=\"user\" />Registered Trainee</span>} key=\"1\">\r\n                            <Candidates />\r\n                        </TabPane>\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Questions</span>} key=\"2\">\r\n                            <Questions id={this.props.conduct.id} questionsOfTest={this.props.conduct.questionsOfTest} updateQuestiosnTest={this.props.updateQuestiosnTest}  />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    conduct : state.conduct\r\n});\r\n\r\n\r\nlet CC=connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(C);\r\n\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(ConductTestS);"]},"metadata":{},"sourceType":"module"}