{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\basic\\\\login\\\\login.js\";\nimport React from \"react\";\nimport { Form, Input, Icon, Button } from 'antd';\nimport './login.css';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../../actions/loginAction';\nimport auth from '../../../services/AuthServices';\nimport Alert from '../../common/alert';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          auth.LoginAuth(values.email, values.password).then(response => {\n            console.log(response);\n\n            if (response.data.success) {\n              this.props.login(response.data.user);\n              auth.storeToken(response.data.token);\n              this.setState({\n                isLoggedIn: true\n              });\n            } else {\n              return Alert('error', 'Error!', response.data.message);\n            }\n          }).catch(error => {\n            console.log(error);\n            return Alert('error', 'Error!', 'Server Error');\n          });\n        }\n      });\n    };\n\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n\n    if (this.state.isLoggedIn) {\n      return React.createElement(Redirect, {\n        to: this.props.user.userOptions[0].link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Email\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Login\")))));\n    }\n  }\n\n}\n\nconst LoginForm = Form.create({\n  name: 'login'\n})(Login);\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  logout\n})(LoginForm);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\basic\\login\\login.js"],"names":["React","Form","Input","Icon","Button","connect","login","logout","auth","Alert","Redirect","Login","Component","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","LoginAuth","email","password","then","response","data","success","user","storeToken","token","setState","isLoggedIn","message","catch","error","state","render","getFieldDecorator","userOptions","link","rules","type","required","color","LoginForm","create","name","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Icon, Button } from 'antd';\r\nimport './login.css';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout } from '../../../actions/loginAction';\r\nimport auth from '../../../services/AuthServices';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoggedIn :false\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                auth.LoginAuth(values.email,values.password).then((response)=>{\r\n                    console.log(response);\r\n                    if(response.data.success){\r\n                        this.props.login(response.data.user)\r\n                        auth.storeToken(response.data.token);\r\n                        this.setState({\r\n                            isLoggedIn : true\r\n                        })\r\n                    }\r\n                    else{\r\n                        return Alert('error','Error!',response.data.message);\r\n                    }\r\n                }).catch((error)=>{\r\n                    console.log(error);\r\n                    return Alert('error','Error!','Server Error');\r\n                })              \r\n            }\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        if(this.state.isLoggedIn){\r\n            return <Redirect to={this.props.user.userOptions[0].link} />\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"login-container\">\r\n                    <div className=\"login-inner\">\r\n                        <Form  onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"Email\" hasFeedback>\r\n                                {getFieldDecorator('email', {\r\n                                    rules: [\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: 'The input is not valid E-mail!',\r\n                                        },\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your E-mail!',\r\n                                        },\r\n                                    ],\r\n                                })(<Input \r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Username\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Password\" hasFeedback>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [\r\n                                        { \r\n                                            required: true, message: 'Please input your Password!' \r\n                                        }\r\n                                    ],\r\n                                })(\r\n                                    <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                    Login\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>  \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst LoginForm = Form.create({ name: 'login' })(Login);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    login, \r\n    logout\r\n})(LoginForm);"]},"metadata":{},"sourceType":"module"}