{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainee\\\\examPortal\\\\portal.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Typography, Skeleton } from 'antd';\nimport './portal.css';\nimport Instruction from './instruction';\nimport TestBoard from './testBoard';\nimport Answer from '../answersheet/answer';\nimport { fetchTraineedata, setTestDetsils, fetchTestdata } from '../../../actions/traineeAction';\nimport queryString from 'query-string';\nconst Title = Typography.Title;\n\nclass MainPortal extends Component {\n  constructor(props) {\n    super(props);\n    let params = queryString.parse(this.props.location.search);\n    this.state = {\n      testDetails: params\n    };\n    this.props.setTestDetsils(params.testid, params.traineeid);\n  }\n\n  componentDidMount() {\n    console.log(this.props.trainee.traineeid);\n    this.props.fetchTraineedata(this.state.testDetails.traineeid);\n    this.props.fetchTestdata(this.state.testDetails.testid, this.state.testDetails.traineeid);\n  }\n\n  render() {\n    if (this.props.trainee.initialloading2 || this.props.trainee.initialloading1) {\n      return React.createElement(\"div\", {\n        className: \"skeletor-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    } else {\n      if (this.props.trainee.invalidUrl) {\n        return window.location.href = \"\";\n      } else {\n        if (this.props.trainee.LocaltestDone) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(Answer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }));\n        } else {\n          if (this.props.trainee.testconducted) {\n            return React.createElement(\"div\", {\n              className: \"Test-portal-not-started-yet-wrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"Test-portal-not-started-yet-inner\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }, React.createElement(Title, {\n              className: \"Test-portal-not-started-yet-inner-message\",\n              style: {\n                color: '#fff'\n              },\n              level: 4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, \"The Test is Over!\", React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }), \" You are late.\")));\n          } else {\n            if (!this.props.trainee.testbegins) {\n              return React.createElement(\"div\", {\n                className: \"Test-portal-not-started-yet-wrapper\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 65\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"Test-portal-not-started-yet-inner\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66\n                },\n                __self: this\n              }, React.createElement(Title, {\n                className: \"Test-portal-not-started-yet-inner-message\",\n                style: {\n                  color: '#fff'\n                },\n                level: 4,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67\n                },\n                __self: this\n              }, \"The test has not started yet. Wait for the trainer's instruction then refresh the page.\")));\n            } else {\n              if (this.props.trainee.startedWriting) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 75\n                  },\n                  __self: this\n                }, React.createElement(TestBoard, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 76\n                  },\n                  __self: this\n                }));\n              } else {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 82\n                  },\n                  __self: this\n                }, React.createElement(Instruction, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 83\n                  },\n                  __self: this\n                }));\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trainee: state.trainee\n});\n\nexport default connect(mapStateToProps, {\n  fetchTraineedata,\n  setTestDetsils,\n  fetchTestdata\n})(MainPortal);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainee\\examPortal\\portal.js"],"names":["React","Component","connect","Typography","Skeleton","Instruction","TestBoard","Answer","fetchTraineedata","setTestDetsils","fetchTestdata","queryString","Title","MainPortal","constructor","props","params","parse","location","search","state","testDetails","testid","traineeid","componentDidMount","console","log","trainee","render","initialloading2","initialloading1","invalidUrl","window","href","LocaltestDone","testconducted","color","testbegins","startedWriting","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography,Skeleton  } from 'antd'\r\nimport './portal.css';\r\nimport Instruction from './instruction';\r\nimport TestBoard from './testBoard';\r\nimport Answer from '../answersheet/answer';\r\nimport { fetchTraineedata,setTestDetsils,fetchTestdata } from '../../../actions/traineeAction';\r\nimport queryString from 'query-string';\r\nconst { Title } = Typography;\r\n\r\n\r\nclass MainPortal extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        let params = queryString.parse(this.props.location.search);\r\n        this.state={\r\n            testDetails:params\r\n        }\r\n        this.props.setTestDetsils(params.testid,params.traineeid)\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.trainee.traineeid)\r\n        this.props.fetchTraineedata(this.state.testDetails.traineeid)\r\n        this.props.fetchTestdata(this.state.testDetails.testid,this.state.testDetails.traineeid)\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.trainee.initialloading2 || this.props.trainee.initialloading1){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>  \r\n            )\r\n        }\r\n        else{\r\n            if(this.props.trainee.invalidUrl){\r\n                return window.location.href=``;\r\n            }\r\n            else{\r\n                if(this.props.trainee.LocaltestDone){\r\n                    return(\r\n                        <div>\r\n                            <Answer/>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    if(this.props.trainee.testconducted){\r\n                        return(\r\n                            <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                <div className=\"Test-portal-not-started-yet-inner\">\r\n                                    <Title className=\"Test-portal-not-started-yet-inner-message\" style={{color:'#fff'}} level={4}>The Test is Over!<br/> You are late.</Title>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else{\r\n                        if(!this.props.trainee.testbegins){\r\n                            return(\r\n                                <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                    <div className=\"Test-portal-not-started-yet-inner\">\r\n                                        <Title className=\"Test-portal-not-started-yet-inner-message\" style={{color:'#fff'}} level={4}>The test has not started yet. Wait for the trainer's instruction then refresh the page.</Title>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else{\r\n                            if(this.props.trainee.startedWriting){\r\n                                return(\r\n                                    <div>\r\n                                        <TestBoard />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <div>\r\n                                        <Instruction/>                             \r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineedata,\r\n    setTestDetsils,\r\n    fetchTestdata\r\n})(MainPortal);\r\n\r\n"]},"metadata":{},"sourceType":"module"}