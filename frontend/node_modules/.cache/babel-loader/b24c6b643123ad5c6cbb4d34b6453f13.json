{"ast":null,"code":"import _objectSpread from \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport apis from '../services/Apis';\nimport Alert from '../components/common/alert';\nimport { Post } from '../services/axiosCall';\n\nlet parse_time = d => {\n  console.log(\"\".concat(d, \"I am called\"));\n  var m_left = Math.floor(d / 60);\n  var s_left = Number(String(d % 60).slice(0, 2));\n  return {\n    m_left: m_left,\n    s_left: s_left\n  };\n};\n\nexport const setTestDetsils = (d1, d2) => {\n  return {\n    type: 'SET_TRAINEE_TEST_DETAILS',\n    payload1: d1,\n    payload2: d2\n  };\n};\nexport const LocaltestDone = d => dispatch => {\n  dispatch({\n    type: 'TEST_DONE_LOCAL'\n  });\n};\nexport const fetchTraineedata = d => dispatch => {\n  Post({\n    url: apis.FETCH_TRAINEE_DETAILS,\n    data: {\n      _id: d\n    }\n  }).then(response => {\n    console.log(response);\n\n    if (response.data.success) {\n      dispatch({\n        type: 'FETCH_LOGGED_IN_TRAINEE',\n        payload: response.data.data\n      });\n    } else {\n      Alert('error', 'Error!', response.data.message);\n    }\n  });\n};\nexport const fetchTestdata = (d1, d2) => dispatch => {\n  Post({\n    url: apis.FETCH_TRAINEE_TEST_DETAILS,\n    data: {\n      testid: d1,\n      traineeid: d2\n    }\n  }).then(response => {\n    console.log(response.data);\n\n    if (response.data.success) {\n      if (response.data.data.completed || !response.data.data.startedWriting) {\n        dispatch({\n          type: 'FETCH_TEST_FLAG',\n          payload1: response.data.data.testbegins,\n          payload2: response.data.data.startedWriting,\n          payload3: response.data.data.testconducted,\n          payload4: response.data.data.completed,\n          payload5: 0,\n          payload6: 0\n        });\n      } else {\n        let t = parse_time(response.data.data.pending);\n        dispatch({\n          type: 'FETCH_TEST_FLAG',\n          payload1: response.data.data.testbegins,\n          payload2: response.data.data.startedWriting,\n          payload3: response.data.data.testconducted,\n          payload4: response.data.data.completed,\n          payload5: t.m_left,\n          payload6: t.s_left\n        });\n      }\n    } else {\n      dispatch({\n        type: 'invalidUrl'\n      });\n    }\n  }).catch(err => {\n    dispatch({\n      type: 'invalidUrl'\n    });\n  });\n};\nexport const ProceedtoTest = (d1, d2, d3) => dispatch => {\n  console.log(\"Hello from ins\".concat(d1, \",\").concat(d2));\n  dispatch({\n    type: 'PROCEEDING_TO_TEST',\n    payload: true\n  });\n  Post({\n    url: \"\".concat(apis.PROCEED_TO_TEST),\n    data: {\n      testid: d1,\n      userid: d2\n    }\n  }).then(response => {\n    console.log(response);\n\n    if (!response.data.success) {\n      Alert('error', 'Error!', response.data.message);\n    }\n\n    d3();\n    dispatch({\n      type: 'PROCEEDING_TO_TEST',\n      payload: false\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: 'PROCEEDING_TO_TEST',\n      payload: false\n    });\n    Alert('error', 'Error!', \"Server error\");\n  });\n};\nexport const fetchTraineeTestQuestions = tid => dispatch => {\n  Post({\n    url: \"\".concat(apis.FETCH_TRAINEE_TEST_QUESTION),\n    data: {\n      id: tid\n    }\n  }).then(response => {\n    console.log(response.data);\n\n    if (response.data.success) {\n      dispatch({\n        type: 'UPDATE_TRAINEE_TEST_QUESTIONS',\n        payload: response.data.data\n      });\n    } else {\n      Alert('error', 'Error!', response.data.message);\n    }\n  }).catch(error => {\n    console.log(error);\n    Alert('error', 'Error!', \"Server error\");\n  });\n};\nexport const fetchTraineeTestAnswerSheet = (tid, uid) => dispatch => {\n  Post({\n    url: \"\".concat(apis.FETCH_TRAINEE_TEST_ANSWERSHEET),\n    data: {\n      testid: tid,\n      userid: uid\n    }\n  }).then(response => {\n    if (response.data.success) {\n      console.log(response.data.data);\n      var d = response.data.data.answers.map((d, i) => {\n        if (d.chosenOption.length === 0) {\n          return _objectSpread({}, d, {\n            isMarked: false,\n            isAnswered: false\n          });\n        } else {\n          return _objectSpread({}, d, {\n            isMarked: false,\n            isAnswered: true\n          });\n        }\n      });\n      dispatch({\n        type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\n        payload: d\n      });\n    } else {\n      Alert('error', 'Error!', response.data.message);\n    }\n  }).catch(error => {\n    console.log(error);\n    Alert('error', 'Error!', \"Server error\");\n  });\n};\nexport const switchQuestion = d1 => {\n  return {\n    type: 'SWITCH_QUESTION',\n    payload: d1\n  };\n};\nexport const updateIsMarked = d1 => {\n  return {\n    type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\n    payload: d1\n  };\n};\nexport const FeedbackStatus = s => {\n  return {\n    type: 'SET_HAS_GIVEN_FEEDBACK',\n    payload: s\n  };\n};","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\actions\\traineeAction.js"],"names":["apis","Alert","Post","parse_time","d","console","log","m_left","Math","floor","s_left","Number","String","slice","setTestDetsils","d1","d2","type","payload1","payload2","LocaltestDone","dispatch","fetchTraineedata","url","FETCH_TRAINEE_DETAILS","data","_id","then","response","success","payload","message","fetchTestdata","FETCH_TRAINEE_TEST_DETAILS","testid","traineeid","completed","startedWriting","testbegins","payload3","testconducted","payload4","payload5","payload6","t","pending","catch","err","ProceedtoTest","d3","PROCEED_TO_TEST","userid","error","fetchTraineeTestQuestions","tid","FETCH_TRAINEE_TEST_QUESTION","id","fetchTraineeTestAnswerSheet","uid","FETCH_TRAINEE_TEST_ANSWERSHEET","answers","map","i","chosenOption","length","isMarked","isAnswered","switchQuestion","updateIsMarked","FeedbackStatus","s"],"mappings":"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","sourcesContent":["import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { Post } from '../services/axiosCall';\r\n\r\nlet parse_time = (d)=>{\r\n    console.log(`${d}I am called`)\r\n    var m_left =Math.floor(d/60)\r\n    var s_left=Number(String(d%60).slice(0,2))\r\n    return{\r\n        m_left:m_left,\r\n        s_left:s_left\r\n    }\r\n}\r\n\r\n\r\nexport const setTestDetsils=(d1,d2)=>{\r\n    return({\r\n        type:'SET_TRAINEE_TEST_DETAILS',\r\n        payload1:d1,\r\n        payload2:d2\r\n    })\r\n}\r\nexport const LocaltestDone = (d)=> dispatch =>{\r\n    dispatch({\r\n        type : 'TEST_DONE_LOCAL'\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchTraineedata =(d)=>dispatch=>{\r\n    Post({\r\n        url:apis.FETCH_TRAINEE_DETAILS,\r\n        data:{\r\n            _id:d\r\n        }\r\n    }).then((response)=>{\r\n        console.log(response)\r\n        if(response.data.success){\r\n            dispatch({\r\n                type:'FETCH_LOGGED_IN_TRAINEE',\r\n                payload:response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const fetchTestdata =(d1,d2)=>dispatch=>{\r\n    Post({\r\n        url:apis.FETCH_TRAINEE_TEST_DETAILS,\r\n        data:{\r\n            testid:d1,\r\n            traineeid:d2\r\n        }\r\n    }).then((response)=>{\r\n        console.log(response.data);\r\n        if(response.data.success){\r\n            if(response.data.data.completed || !response.data.data.startedWriting){\r\n                dispatch({\r\n                    type:'FETCH_TEST_FLAG',\r\n                    payload1:response.data.data.testbegins,\r\n                    payload2:response.data.data.startedWriting,\r\n                    payload3:response.data.data.testconducted,\r\n                    payload4:response.data.data.completed,\r\n                    payload5:0,\r\n                    payload6:0\r\n                })\r\n            }\r\n            else{\r\n                let t=parse_time(response.data.data.pending);\r\n                dispatch({\r\n                    type:'FETCH_TEST_FLAG',\r\n                    payload1:response.data.data.testbegins,\r\n                    payload2:response.data.data.startedWriting,\r\n                    payload3:response.data.data.testconducted,\r\n                    payload4:response.data.data.completed,\r\n                    payload5:t.m_left,\r\n                    payload6:t.s_left\r\n                })\r\n            }\r\n            \r\n        }\r\n        else{\r\n            dispatch({\r\n                type:'invalidUrl',\r\n            })\r\n        }\r\n    }).catch((err)=>{\r\n        dispatch({\r\n            type:'invalidUrl',\r\n        })  \r\n    })\r\n}\r\n\r\n\r\nexport const ProceedtoTest=(d1,d2,d3)=>dispatch=>{\r\n    console.log(`Hello from ins${d1},${d2}`)\r\n    dispatch({\r\n        type:'PROCEEDING_TO_TEST',\r\n        payload:true\r\n    })\r\n    Post({\r\n        url:`${apis.PROCEED_TO_TEST}`,\r\n        data:{\r\n            testid:d1,\r\n            userid:d2\r\n        }\r\n    }).then((response)=>{\r\n        console.log(response);\r\n        if(!response.data.success){\r\n            Alert('error','Error!',response.data.message);\r\n        }\r\n        d3();\r\n        dispatch({\r\n            type:'PROCEEDING_TO_TEST',\r\n            payload:false\r\n        })\r\n    }).catch((error)=>{\r\n        console.log(error)\r\n        dispatch({\r\n            type:'PROCEEDING_TO_TEST',\r\n            payload:false\r\n        })\r\n        Alert('error','Error!',\"Server error\");\r\n    })\r\n}\r\n\r\n\r\nexport const fetchTraineeTestQuestions=(tid)=>dispatch=>{\r\n    Post({\r\n        url:`${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n        data:{\r\n            id:tid\r\n        }\r\n    }).then((response)=>{\r\n        console.log(response.data);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type:'UPDATE_TRAINEE_TEST_QUESTIONS',\r\n                payload:response.data.data\r\n            })\r\n        } \r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n        }\r\n    }).catch((error)=>{\r\n        console.log(error);\r\n        Alert('error','Error!',\"Server error\");\r\n    })\r\n}\r\n\r\n\r\nexport const fetchTraineeTestAnswerSheet=(tid,uid)=>dispatch=>{\r\n    Post({\r\n        url:`${apis.FETCH_TRAINEE_TEST_ANSWERSHEET}`,\r\n        data:{\r\n            testid:tid,\r\n            userid:uid\r\n        }\r\n    }).then((response)=>{\r\n        if(response.data.success){\r\n            console.log(response.data.data);\r\n            var d=response.data.data.answers.map((d,i)=>{\r\n                if(d.chosenOption.length===0){\r\n                    return({\r\n                        ...d,\r\n                        isMarked:false,\r\n                        isAnswered:false\r\n                    })\r\n                }\r\n                else{\r\n                    return({\r\n                        ...d,\r\n                        isMarked:false,\r\n                        isAnswered:true\r\n                    })\r\n                }\r\n                \r\n            })\r\n            dispatch({\r\n                type:'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n                payload:d\r\n            })\r\n        } \r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n        }\r\n    }).catch((error)=>{\r\n        console.log(error);\r\n        Alert('error','Error!',\"Server error\");\r\n    })\r\n}\r\n\r\nexport const switchQuestion = (d1)=>{\r\n    return{\r\n        type:'SWITCH_QUESTION',\r\n        payload:d1\r\n    }\r\n}\r\n\r\nexport const updateIsMarked = (d1)=>{\r\n    return {\r\n        type:'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n        payload:d1\r\n    }\r\n}\r\n\r\nexport const FeedbackStatus = (s)=>{\r\n    return{\r\n        type:'SET_HAS_GIVEN_FEEDBACK',\r\n        payload:s\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}