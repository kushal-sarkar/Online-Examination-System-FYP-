{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainer\\\\testdetails\\\\stats.js\";\nimport React, { Component } from 'react';\nimport './testdetails.css';\nimport { Card, Row, Col } from 'antd';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { bgcolor, bordercolor } from '../../../services/bgcolor';\nexport default class Stats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      stats: this.props.stats,\n      Scorelable: [],\n      Scoredata: [],\n      bgColor1: [],\n      borcolor1: [],\n      maxmMarks: this.props.maxmMarks,\n      passData: [0, 0],\n      passLable: ['Fail', 'Pass'],\n      stat: ['91% to 100%', '81% to 90%', '71% to 80%', '61% to 70%', '50% to 60%', 'Below 50%'],\n      statdata: [0, 0, 0, 0, 0, 0]\n    };\n  }\n\n  componentWillMount() {\n    let _this$state = this.state,\n        bgColor1 = _this$state.bgColor1,\n        borcolor1 = _this$state.borcolor1;\n    var maxi = -1;\n    let p = 0;\n    let f = 0;\n    let p90_100 = 0;\n    let p80_90 = 0;\n    let p70_80 = 0;\n    let p60_70 = 0;\n    let p50_60 = 0;\n    let below50 = 0;\n    var pc = 0;\n    this.state.stats.map((d, i) => {\n      pc = d.score / this.state.maxmMarks * 100;\n\n      if (pc >= 91) {\n        p90_100++;\n      } else if (pc >= 81) {\n        p80_90++;\n      } else if (pc >= 71) {\n        p70_80++;\n      } else if (pc >= 61) {\n        p60_70++;\n      } else if (pc >= 50) {\n        p50_60++;\n      } else {\n        below50++;\n      }\n\n      if (d.score >= this.state.maxmMarks / 2) {\n        p++;\n      } else {\n        f++;\n      }\n\n      if (d.score > maxi) {\n        maxi = d.score;\n      }\n    });\n    var dp = [];\n    var label = [];\n\n    for (let i = 0; i <= maxi; i++) {\n      dp.push(0);\n      label.push(i);\n      bgColor1.push(bgcolor[i]);\n      borcolor1.push(bordercolor[i]);\n    }\n\n    this.state.stats.map((d, i) => {\n      dp[d.score]++;\n    });\n    this.setState({\n      Scorelable: label,\n      Scoredata: dp,\n      bgColor1: bgColor1,\n      borcolor1: borcolor1,\n      passData: [f, p],\n      statdata: [p90_100, p80_90, p70_80, p60_70, p50_60, below50]\n    });\n  }\n\n  render() {\n    let barData = {\n      labels: this.state.Scorelable,\n      datasets: [{\n        label: 'Scores',\n        data: this.state.Scoredata,\n        backgroundColor: this.state.bgColor1,\n        borderColor: this.state.borcolor1,\n        borderWidth: 1\n      }]\n    };\n    let DoughNutData1 = {\n      labels: this.state.passLable,\n      datasets: [{\n        label: 'Pass/Fail',\n        data: this.state.passData,\n        backgroundColor: [bgcolor[0], bgcolor[1]],\n        borderColor: [bordercolor[0], bordercolor[1]],\n        borderWidth: 1\n      }]\n    };\n    let DoughNutData2 = {\n      labels: this.state.stat,\n      datasets: [{\n        label: 'Percentage wise category',\n        data: this.state.statdata,\n        backgroundColor: [bgcolor[0], bgcolor[1], bgcolor[2], bgcolor[3], bgcolor[4], bgcolor[5]],\n        borderColor: [bordercolor[0], bordercolor[1], bordercolor[2], bordercolor[3], bordercolor[4], bordercolor[5]],\n        borderWidth: 1\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"download-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Download the test result excel sheet.\"), React.createElement(\"a\", {\n      href: this.props.file,\n      target: \"_blank\",\n      className: \"download-xlsx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Download\")))), React.createElement(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: '10px 10px 0px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Score vs No of students.\")), React.createElement(\"div\", {\n      style: {\n        padding: '0px 10px 10px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: barData,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: '10px 10px 0px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Pass/Fail.\")), React.createElement(\"div\", {\n      style: {\n        padding: '0px 10px 10px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: DoughNutData1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: '10px 10px 0px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Percentage wise category.\")), React.createElement(\"div\", {\n      style: {\n        padding: '0px 10px 10px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: DoughNutData2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainer\\testdetails\\stats.js"],"names":["React","Component","Card","Row","Col","Bar","Doughnut","bgcolor","bordercolor","Stats","constructor","props","state","id","stats","Scorelable","Scoredata","bgColor1","borcolor1","maxmMarks","passData","passLable","stat","statdata","componentWillMount","maxi","p","f","p90_100","p80_90","p70_80","p60_70","p50_60","below50","pc","map","d","i","score","dp","label","push","setState","render","barData","labels","datasets","data","backgroundColor","borderColor","borderWidth","DoughNutData1","DoughNutData2","file","marginTop","padding","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './testdetails.css';\r\nimport { Card,Row,Col  } from 'antd';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport {bgcolor,bordercolor} from '../../../services/bgcolor';\r\n\r\n\r\n\r\nexport default class Stats extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.id,\r\n            stats:this.props.stats,\r\n            Scorelable:[],\r\n            Scoredata:[],\r\n            bgColor1:[],\r\n            borcolor1:[],\r\n            maxmMarks:this.props.maxmMarks,\r\n            passData:[0,0],\r\n            passLable:['Fail','Pass'],\r\n            stat:['91% to 100%','81% to 90%','71% to 80%','61% to 70%','50% to 60%','Below 50%'],\r\n            statdata:[0,0,0,0,0,0]\r\n\r\n        } \r\n    }\r\n    \r\n    componentWillMount(){\r\n        let {bgColor1,borcolor1}=this.state;\r\n        var maxi=-1;\r\n        let p=0;\r\n        let f=0;\r\n        let p90_100=0;\r\n        let p80_90=0;\r\n        let p70_80=0;\r\n        let p60_70=0;\r\n        let p50_60=0;\r\n        let below50=0;\r\n        var pc=0;\r\n        this.state.stats.map((d,i)=>{\r\n            pc=(d.score/this.state.maxmMarks)*100;\r\n            if(pc>=91){\r\n                p90_100++;\r\n            }\r\n            else if(pc>=81){\r\n                p80_90++;\r\n            }\r\n            else if(pc>=71){\r\n                p70_80++;\r\n            }\r\n            else if(pc>=61){\r\n                p60_70++;\r\n            }\r\n            else if(pc>=50){\r\n                p50_60++;\r\n            }\r\n            else{\r\n                below50++;\r\n            }\r\n\r\n            if(d.score>=this.state.maxmMarks/2){\r\n                p++;\r\n            }\r\n            else{\r\n                f++;\r\n            }\r\n            if(d.score>maxi){\r\n                maxi=d.score\r\n            }\r\n        })\r\n        var dp =[];\r\n        var label = [];\r\n        \r\n        for(let i=0;i<=maxi;i++){\r\n            dp.push(0);\r\n            label.push(i);\r\n            bgColor1.push(bgcolor[i]);\r\n            borcolor1.push(bordercolor[i]);\r\n\r\n        }\r\n        \r\n        this.state.stats.map((d,i)=>{\r\n            dp[d.score]++;\r\n        })  \r\n        this.setState({\r\n            Scorelable:label,\r\n            Scoredata:dp,\r\n            bgColor1:bgColor1,\r\n            borcolor1:borcolor1,\r\n            passData:[f,p],\r\n            statdata:[p90_100,p80_90,p70_80,p60_70,p50_60,below50]\r\n        })      \r\n    }\r\n\r\n    render() {\r\n        let barData={\r\n            labels:this.state.Scorelable,\r\n            datasets:[{\r\n                label: 'Scores',\r\n                data: this.state.Scoredata,\r\n                backgroundColor:this.state.bgColor1,\r\n                borderColor:this.state.borcolor1,\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData1={\r\n            labels:this.state.passLable,\r\n            datasets:[{\r\n                label: 'Pass/Fail',\r\n                data: this.state.passData,\r\n                backgroundColor:[bgcolor[0],bgcolor[1]],\r\n                borderColor:[bordercolor[0],bordercolor[1]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData2={\r\n            labels:this.state.stat,\r\n            datasets:[{\r\n                label: 'Percentage wise category',\r\n                data: this.state.statdata,\r\n                backgroundColor:[bgcolor[0],bgcolor[1],bgcolor[2],bgcolor[3],bgcolor[4],bgcolor[5]],\r\n                borderColor:[bordercolor[0],bordercolor[1],bordercolor[2],bordercolor[3],bordercolor[4],bordercolor[5]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card >\r\n                        <div className=\"download-section\">\r\n                            <b>Download the test result excel sheet.</b>\r\n                            <a href={this.props.file} target=\"_blank\" className=\"download-xlsx\">Download</a>\r\n                        </div>\r\n                    </Card>\r\n                </div> \r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <div style={{padding:'10px 10px 0px 10px'}}>\r\n                            <b>Score vs No of students.</b>\r\n                        </div>\r\n                        <div style={{padding:'0px 10px 10px 10px'}}>\r\n                            <Bar\r\n                                data={barData}\r\n                                options={{ maintainAspectRatio: false }}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Pass/Fail.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData1} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Percentage wise category.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData2} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Card>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}