{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainee\\\\answersheet\\\\feedback.js\";\nimport React, { Component } from 'react';\nimport './answer.css';\nimport { connect } from 'react-redux';\nimport { Post } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../common/alert';\nimport { Rate, Input, Button } from 'antd';\nimport { FeedbackStatus } from '../../../actions/traineeAction';\nconst TextArea = Input.TextArea;\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStarChange = star => {\n      console.log(star);\n      this.setState({\n        star: star\n      });\n    };\n\n    this.onCommentChange = comment => {\n      this.setState({\n        comment: comment.target.value\n      });\n    };\n\n    this.submitFeedback = () => {\n      this.setState({\n        loading: true\n      });\n      let _this$state = this.state,\n          star = _this$state.star,\n          comment = _this$state.comment;\n\n      if (star !== 0 && comment.length > 0) {\n        Post({\n          url: apis.GIVE_FEEDBACK,\n          data: {\n            testid: this.props.trainee.testid,\n            userid: this.props.trainee.traineeid,\n            rating: star,\n            feedback: comment\n          }\n        }).then(response => {\n          if (response.data.success) {\n            this.setState({\n              loading: false\n            });\n            Alert('success', 'Success', 'Thanks for your feedback');\n            this.props.FeedbackStatus(true);\n          } else {\n            this.setState({\n              loading: false\n            });\n            Alert('error', 'Failed', response.data.message);\n          }\n        }).catch(error => {\n          console.log(error);\n          Alert('error', 'Failed', 'Server Error');\n          this.setState({\n            loading: false\n          });\n        });\n      } else {}\n    };\n\n    this.state = {\n      star: 0,\n      comment: \"\",\n      loading: false\n    };\n  }\n\n  render() {\n    const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\n    return React.createElement(\"div\", {\n      className: \"feedbackFormHolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Rate, {\n      tooltips: desc,\n      onChange: this.handleStarChange,\n      value: this.state.star,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), this.state.star ? React.createElement(\"span\", {\n      className: \"ant-rate-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, desc[this.state.star - 1]) : '')), React.createElement(\"div\", {\n      className: \"pp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      rows: 4,\n      onChange: this.onCommentChange,\n      value: this.state.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.submitFeedback,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trainee: state.trainee\n});\n\nexport default connect(mapStateToProps, {\n  FeedbackStatus\n})(Feedback);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainee\\answersheet\\feedback.js"],"names":["React","Component","connect","Post","apis","Alert","Rate","Input","Button","FeedbackStatus","TextArea","Feedback","constructor","props","handleStarChange","star","console","log","setState","onCommentChange","comment","target","value","submitFeedback","loading","state","length","url","GIVE_FEEDBACK","data","testid","trainee","userid","traineeid","rating","feedback","then","response","success","message","catch","error","render","desc","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './answer.css';\r\nimport { connect } from 'react-redux';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport { Rate,Input,Button } from 'antd';\r\nimport { FeedbackStatus } from '../../../actions/traineeAction'\r\n\r\n\r\nconst { TextArea } = Input;\r\n\r\nclass Feedback extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            star:0,\r\n            comment:\"\",\r\n            loading:false\r\n        }\r\n    }\r\n\r\n    handleStarChange=(star)=>{\r\n        console.log(star);\r\n        this.setState({ star:star });\r\n    } \r\n    onCommentChange=(comment)=>{\r\n        this.setState({ comment:comment.target.value });\r\n    }\r\n\r\n    submitFeedback=()=>{\r\n        this.setState({loading:true})\r\n        let { star,comment }=this.state;\r\n        if(star!==0 && comment.length>0){\r\n            Post({\r\n                url:apis.GIVE_FEEDBACK,\r\n                data:{\r\n                    testid:this.props.trainee.testid,\r\n                    userid:this.props.trainee.traineeid,\r\n                    rating:star,\r\n                    feedback:comment\r\n                }\r\n                \r\n            }).then((response)=>{\r\n                if(response.data.success){\r\n                    this.setState({loading:false})\r\n                    Alert('success','Success','Thanks for your feedback');\r\n                    this.props.FeedbackStatus(true)\r\n                }\r\n                else{\r\n                    this.setState({loading:false})\r\n                    Alert('error','Failed',response.data.message);\r\n                }\r\n                \r\n            }).catch((error)=>{\r\n                console.log(error);\r\n                Alert('error','Failed','Server Error');\r\n                this.setState({loading:false})\r\n            })\r\n        }\r\n        else{\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\r\n        return (\r\n            <div className=\"feedbackFormHolder\">\r\n                <div className=\"pp\">\r\n                    <span>\r\n                        <Rate tooltips={desc} onChange={this.handleStarChange} value={this.state.star} />\r\n                        {this.state.star ? <span className=\"ant-rate-text\">{desc[this.state.star - 1]}</span> : ''}\r\n                    </span>\r\n                </div>\r\n                <div className=\"pp\">\r\n                    <TextArea rows={4} onChange={this.onCommentChange} value={this.state.comment} />\r\n                </div>\r\n                <div className=\"pp\">\r\n                    <Button type=\"primary\" onClick={this.submitFeedback} loading={this.state.loading}>Submit</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus\r\n})(Feedback);"]},"metadata":{},"sourceType":"module"}