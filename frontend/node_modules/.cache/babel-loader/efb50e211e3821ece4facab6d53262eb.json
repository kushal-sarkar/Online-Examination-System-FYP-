{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\dashboard\\\\backbone.js\";\nimport React from 'react';\nimport './backbone.css';\nimport { connect } from 'react-redux';\nimport AllTrainer from '../admin/allTrainer/alltrainer';\nimport AllTopics from '../admin/allTopics/alltopics.js';\nimport AllQuestions from '../trainer/allquestions/allquestion';\nimport AllTests from '../trainer/alltests/alltest';\nimport ConductTest from '../trainer/conducttest/conducttest';\nimport NewTest from '../trainer/newtest/newtest';\nimport auth from '../../services/AuthServices';\nimport Welcome from './welcome';\nimport ErrorPage from './errorPage';\nimport { login, logout } from '../../actions/loginAction';\nimport { changeActiveRoute } from '../../actions/useraction';\nimport Alert from '../common/alert';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Layout, Menu, Button, Icon, Tooltip } from 'antd';\nimport main from './main.jpg';\nconst Header = Layout.Header,\n      Sider = Layout.Sider,\n      Content = Layout.Content;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    };\n\n    this.logOut = () => {\n      auth.deleteToken();\n      window.location.href = '/';\n    };\n\n    this.state = {\n      LocalIsLoggedIn: this.props.user.isLoggedIn,\n      collapsed: true\n    };\n  }\n\n  componentWillMount() {\n    console.log(this.state.LocalIsLoggedIn);\n    var t = auth.retriveToken();\n\n    if (this.state.LocalIsLoggedIn) {} else if (t && t !== 'undefined') {\n      auth.FetchAuth(t).then(response => {\n        console.log(response.data);\n        this.props.login(response.data.user);\n        this.setState({\n          LocalIsLoggedIn: true\n        });\n        var subUrl = this.props.match.params.options;\n        console.log(subUrl);\n        var obj = this.props.user.userOptions.find((o, i) => {\n          if (o.link === \"/user/\".concat(subUrl)) {\n            return o;\n          }\n        });\n        var tt = this.props.user.userOptions.indexOf(obj);\n\n        if (tt === -1) {\n          window.location.href = \"\".concat(this.props.user.userOptions[0].link);\n        } else {\n          this.props.changeActiveRoute(String(tt));\n        }\n      }).catch(error => {\n        Alert('warning', 'Warning!', 'Server Error.');\n        auth.deleteToken();\n        window.location.href = '/';\n      });\n    } else {\n      window.location = '/';\n    }\n  }\n\n  render() {\n    let torender = null;\n\n    if (this.props.match.params.options === 'listtrainers') {\n      torender = React.createElement(AllTrainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    } else if (this.props.match.params.options === 'listsubjects') {\n      torender = React.createElement(AllTopics, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    } else if (this.props.match.params.options === 'listquestions') {\n      torender = React.createElement(AllQuestions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    } else if (this.props.match.params.options === 'listtests') {\n      torender = React.createElement(AllTests, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    } else if (this.props.match.params.options === 'home') {\n      torender = React.createElement(Welcome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    } else if (this.props.match.params.options === 'newtest') {\n      torender = React.createElement(NewTest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n    } else if (this.props.match.params.options === 'conducttest') {\n      let params = queryString.parse(this.props.location.search);\n      console.log(params);\n      torender = React.createElement(ConductTest, Object.assign({}, params, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    } else {\n      torender = React.createElement(ErrorPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Sider, {\n      trigger: null,\n      collapsible: true,\n      collapsed: this.state.collapsed,\n      style: {\n        overflow: 'hidden',\n        height: '100vh',\n        position: 'fixed',\n        left: 0,\n        zIndex: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      defaultSelectedKeys: [this.props.user.activeRoute],\n      mode: \"inline\",\n      theme: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.props.user.userOptions.map((d, i) => {\n      return React.createElement(Menu.Item, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: d.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, d.display), React.createElement(Link, {\n        to: d.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    }))), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Header, {\n      theme: \"dark\",\n      style: {\n        position: 'fixed',\n        width: '100vw',\n        paddingLeft: '10px',\n        zIndex: '1000'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"trigger\",\n      type: this.state.collapsed ? 'menu-unfold' : 'menu-fold',\n      onClick: this.toggle,\n      style: {\n        color: '#fff',\n        fontSize: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"user-options-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Log Out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      size: \"large\",\n      shape: \"circle\",\n      onClick: this.logOut,\n      className: \"logout-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: main,\n      alt: \"company logo\",\n      className: \"d-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })))), React.createElement(Content, {\n      style: {\n        margin: '24px 16px',\n        padding: 24,\n        marginTop: '80px',\n        background: 'rgb(205,217,225)',\n        minHeight: '100vh',\n        marginLeft: '95px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, torender))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  changeActiveRoute,\n  login,\n  logout\n})(Dashboard);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\dashboard\\backbone.js"],"names":["React","connect","AllTrainer","AllTopics","AllQuestions","AllTests","ConductTest","NewTest","auth","Welcome","ErrorPage","login","logout","changeActiveRoute","Alert","Link","queryString","Layout","Menu","Button","Icon","Tooltip","main","Header","Sider","Content","Dashboard","Component","constructor","props","toggle","setState","collapsed","state","logOut","deleteToken","window","location","href","LocalIsLoggedIn","user","isLoggedIn","componentWillMount","console","log","t","retriveToken","FetchAuth","then","response","data","subUrl","match","params","options","obj","userOptions","find","o","i","link","tt","indexOf","String","catch","error","render","torender","parse","search","overflow","height","position","left","zIndex","activeRoute","map","d","icon","display","width","paddingLeft","color","fontSize","margin","padding","marginTop","background","minHeight","marginLeft","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,2BAA9B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,OAApC,QAAmD,MAAnD;AACA,OAAOC,IAAP,MAAiB,YAAjB;MACQC,M,GAA2BN,M,CAA3BM,M;MAAQC,K,GAAmBP,M,CAAnBO,K;MAAOC,O,GAAYR,M,CAAZQ,O;;AAEvB,MAAMC,SAAN,SAAwB1B,KAAK,CAAC2B,SAA9B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,MARkB,GAQT,MAAM;AACX,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADX,OAAd;AAGH,KAZiB;;AAAA,SAclBE,MAdkB,GAcV,MAAI;AACR1B,MAAAA,IAAI,CAAC2B,WAAL;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACH,KAjBiB;;AAEd,SAAKL,KAAL,GAAW;AACPM,MAAAA,eAAe,EAAG,KAAKV,KAAL,CAAWW,IAAX,CAAgBC,UAD3B;AAEPT,MAAAA,SAAS,EAAE;AAFJ,KAAX;AAIH;;AAaDU,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWM,eAAvB;AACA,QAAIM,CAAC,GAAGrC,IAAI,CAACsC,YAAL,EAAR;;AACA,QAAG,KAAKb,KAAL,CAAWM,eAAd,EAA8B,CAE7B,CAFD,MAGK,IAAGM,CAAC,IAAIA,CAAC,KAAG,WAAZ,EAAwB;AACzBrC,MAAAA,IAAI,CAACuC,SAAL,CAAeF,CAAf,EAAkBG,IAAlB,CAAwBC,QAAD,IAAY;AAC/BN,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACC,IAArB;AACA,aAAKrB,KAAL,CAAWlB,KAAX,CAAiBsC,QAAQ,CAACC,IAAT,CAAcV,IAA/B;AACA,aAAKT,QAAL,CAAc;AACVQ,UAAAA,eAAe,EAAG;AADR,SAAd;AAGA,YAAIY,MAAM,GAAG,KAAKtB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,OAArC;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACA,YAAII,GAAG,GAAG,KAAK1B,KAAL,CAAWW,IAAX,CAAgBgB,WAAhB,CAA4BC,IAA5B,CAAiC,CAACC,CAAD,EAAGC,CAAH,KAAO;AAC9C,cAAGD,CAAC,CAACE,IAAF,qBAAmBT,MAAnB,CAAH,EAA+B;AAC3B,mBAAOO,CAAP;AACH;AACJ,SAJS,CAAV;AAKA,YAAIG,EAAE,GAAC,KAAKhC,KAAL,CAAWW,IAAX,CAAgBgB,WAAhB,CAA4BM,OAA5B,CAAoCP,GAApC,CAAP;;AACA,YAAGM,EAAE,KAAG,CAAC,CAAT,EAAW;AACPzB,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,aAAwB,KAAKT,KAAL,CAAWW,IAAX,CAAgBgB,WAAhB,CAA4B,CAA5B,EAA+BI,IAAvD;AACH,SAFD,MAGI;AACA,eAAK/B,KAAL,CAAWhB,iBAAX,CAA6BkD,MAAM,CAACF,EAAD,CAAnC;AACH;AACJ,OApBD,EAoBGG,KApBH,CAoBUC,KAAD,IAAS;AACdnD,QAAAA,KAAK,CAAC,SAAD,EAAW,UAAX,EAAsB,eAAtB,CAAL;AACAN,QAAAA,IAAI,CAAC2B,WAAL;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AAEH,OAzBD;AA0BH,KA3BI,MA4BD;AACAF,MAAAA,MAAM,CAACC,QAAP,GAAgB,GAAhB;AACH;AAEJ;;AAID6B,EAAAA,MAAM,GAAE;AACJ,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAG,KAAKtC,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,KAAkC,cAArC,EAAoD;AAChDa,MAAAA,QAAQ,GAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACH,KAFD,MAGK,IAAG,KAAKtC,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,KAAkC,cAArC,EAAoD;AACrDa,MAAAA,QAAQ,GAAG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACH,KAFI,MAGA,IAAG,KAAKtC,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,KAAkC,eAArC,EAAqD;AACtDa,MAAAA,QAAQ,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACH,KAFI,MAGA,IAAG,KAAKtC,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,KAAkC,WAArC,EAAiD;AAClDa,MAAAA,QAAQ,GAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACH,KAFI,MAGA,IAAG,KAAKtC,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,KAAkC,MAArC,EAA4C;AAC7Ca,MAAAA,QAAQ,GAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH,KAFI,MAGA,IAAG,KAAKtC,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,KAAkC,SAArC,EAA+C;AAChDa,MAAAA,QAAQ,GAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH,KAFI,MAGA,IAAG,KAAKtC,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,KAAkC,aAArC,EAAmD;AACpD,UAAID,MAAM,GAAGrC,WAAW,CAACoD,KAAZ,CAAkB,KAAKvC,KAAL,CAAWQ,QAAX,CAAoBgC,MAAtC,CAAb;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACAc,MAAAA,QAAQ,GAAC,oBAAC,WAAD,oBAAiBd,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAT;AACH,KAJI,MAKD;AACAc,MAAAA,QAAQ,GAAC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH;;AACD,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,IAAhB;AAAsB,MAAA,WAAW,MAAjC;AAAkC,MAAA,SAAS,EAAE,KAAKlC,KAAL,CAAWD,SAAxD;AACI,MAAA,KAAK,EAAE;AACHsC,QAAAA,QAAQ,EAAE,QADP;AAEHC,QAAAA,MAAM,EAAE,OAFL;AAGHC,QAAAA,QAAQ,EAAE,OAHP;AAIHC,QAAAA,IAAI,EAAE,CAJH;AAKHC,QAAAA,MAAM,EAAC;AALJ,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI,oBAAC,IAAD;AACI,MAAA,mBAAmB,EAAE,CAAC,KAAK7C,KAAL,CAAWW,IAAX,CAAgBmC,WAAjB,CADzB;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMQ,KAAK9C,KAAL,CAAWW,IAAX,CAAgBgB,WAAhB,CAA4BoB,GAA5B,CAAgC,CAACC,CAAD,EAAGlB,CAAH,KAAO;AACnC,aACI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEkB,CAAC,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,CAAC,CAACE,OAAT,CAFJ,EAGI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEF,CAAC,CAACjB,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH,KARD,CANR,CAVJ,CADJ,EA6BI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAE;AAAEY,QAAAA,QAAQ,EAAC,OAAX;AAAmBQ,QAAAA,KAAK,EAAC,OAAzB;AAAiCC,QAAAA,WAAW,EAAE,MAA9C;AAAqDP,QAAAA,MAAM,EAAC;AAA5D,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AACI,MAAA,SAAS,EAAC,SADd;AAEI,MAAA,IAAI,EAAE,KAAKzC,KAAL,CAAWD,SAAX,GAAuB,aAAvB,GAAuC,WAFjD;AAGI,MAAA,OAAO,EAAE,KAAKF,MAHlB;AAII,MAAA,KAAK,EAAE;AAACoD,QAAAA,KAAK,EAAC,MAAP;AAAcC,QAAAA,QAAQ,EAAC;AAAvB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAoC,MAAA,KAAK,EAAC,QAA1C;AAAmD,MAAA,OAAO,EAAE,KAAKjD,MAAjE;AAAyE,MAAA,SAAS,EAAC,eAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEZ,IAAV;AAAgB,MAAA,GAAG,EAAC,cAApB;AAAmC,MAAA,SAAS,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CARJ,CADJ,EAuBI,oBAAC,OAAD;AACI,MAAA,KAAK,EAAE;AACP8D,QAAAA,MAAM,EAAE,WADD;AAEPC,QAAAA,OAAO,EAAE,EAFF;AAGPC,QAAAA,SAAS,EAAC,MAHH;AAIPC,QAAAA,UAAU,EAAE,kBAJL;AAKPC,QAAAA,SAAS,EAAE,OALJ;AAMPC,QAAAA,UAAU,EAAC;AANJ,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI;AAAK,MAAA,KAAK,EAAE;AAAET,QAAAA,KAAK,EAAC;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,QADL,CAVJ,CAvBJ,CA7BJ,CADJ;AAsEH;;AAhKkC;;AAoKvC,MAAMuB,eAAe,GAAGzD,KAAK,KAAK;AAC9BO,EAAAA,IAAI,EAAGP,KAAK,CAACO;AADiB,CAAL,CAA7B;;AAOA,eAAevC,OAAO,CAACyF,eAAD,EAAiB;AACnC7E,EAAAA,iBADmC;AAEnCF,EAAAA,KAFmC;AAGnCC,EAAAA;AAHmC,CAAjB,CAAP,CAIZc,SAJY,CAAf","sourcesContent":["import React from 'react';\r\nimport './backbone.css';\r\nimport { connect } from 'react-redux';\r\nimport AllTrainer from '../admin/allTrainer/alltrainer';\r\nimport AllTopics from '../admin/allTopics/alltopics.js';\r\nimport AllQuestions from '../trainer/allquestions/allquestion';\r\nimport AllTests from '../trainer/alltests/alltest';\r\nimport ConductTest from '../trainer/conducttest/conducttest';\r\nimport NewTest from '../trainer/newtest/newtest';\r\nimport auth from '../../services/AuthServices';\r\nimport Welcome from './welcome';\r\nimport ErrorPage from './errorPage';\r\nimport { login, logout } from '../../actions/loginAction';\r\nimport { changeActiveRoute } from '../../actions/useraction';\r\nimport Alert from '../common/alert';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { Layout, Menu,Button, Icon, Tooltip } from 'antd';\r\nimport main from './main.jpg';\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            LocalIsLoggedIn : this.props.user.isLoggedIn,\r\n            collapsed: true\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    logOut =()=>{\r\n        auth.deleteToken();\r\n        window.location.href='/';\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log(this.state.LocalIsLoggedIn);\r\n        var t = auth.retriveToken();\r\n        if(this.state.LocalIsLoggedIn){\r\n            \r\n        }\r\n        else if(t && t!=='undefined'){\r\n            auth.FetchAuth(t).then((response)=>{\r\n                console.log(response.data);\r\n                this.props.login(response.data.user);\r\n                this.setState({\r\n                    LocalIsLoggedIn : true\r\n                })\r\n                var subUrl = this.props.match.params.options;\r\n                console.log(subUrl);\r\n                var obj = this.props.user.userOptions.find((o,i)=>{\r\n                    if(o.link ===`/user/${subUrl}`){\r\n                        return o\r\n                    }\r\n                });\r\n                var tt=this.props.user.userOptions.indexOf(obj);\r\n                if(tt===-1){\r\n                    window.location.href=`${this.props.user.userOptions[0].link}`;\r\n                }\r\n                else{\r\n                    this.props.changeActiveRoute(String(tt));\r\n                }\r\n            }).catch((error)=>{\r\n                Alert('warning','Warning!','Server Error.');\r\n                auth.deleteToken();\r\n                window.location.href='/';\r\n                \r\n            })\r\n        }\r\n        else{\r\n            window.location='/';\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        let torender = null;\r\n        if(this.props.match.params.options==='listtrainers'){\r\n            torender = <AllTrainer/>;\r\n        }\r\n        else if(this.props.match.params.options==='listsubjects'){\r\n            torender = <AllTopics/>\r\n        }\r\n        else if(this.props.match.params.options==='listquestions'){\r\n            torender = <AllQuestions/>\r\n        }\r\n        else if(this.props.match.params.options==='listtests'){\r\n            torender = <AllTests/>\r\n        }\r\n        else if(this.props.match.params.options==='home'){\r\n            torender=<Welcome />\r\n        }\r\n        else if(this.props.match.params.options==='newtest'){\r\n            torender=<NewTest />\r\n        }\r\n        else if(this.props.match.params.options==='conducttest'){\r\n            let params = queryString.parse(this.props.location.search)\r\n            console.log(params)\r\n            torender=<ConductTest {...params}/>\r\n        }\r\n        else{\r\n            torender=<ErrorPage />\r\n        }\r\n        return (\r\n            <Layout>\r\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}\r\n                    style={{\r\n                        overflow: 'hidden',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                        zIndex:5\r\n                      }}\r\n                    >\r\n                    <div className=\"logo11\" />\r\n                    <Menu \r\n                        defaultSelectedKeys={[this.props.user.activeRoute]}\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                        >\r\n                        {\r\n                            this.props.user.userOptions.map((d,i)=>{\r\n                                return(\r\n                                    <Menu.Item key={i}>\r\n                                        <Icon type={d.icon} />\r\n                                        <span>{d.display}</span>\r\n                                        <Link to={d.link}></Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header theme=\"dark\" style={{ position:'fixed',width:'100vw',paddingLeft: '10px',zIndex:'1000' }}>\r\n                    \r\n                        <Icon\r\n                            className=\"trigger\"\r\n                            type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                            onClick={this.toggle}\r\n                            style={{color:'#fff',fontSize:'20px'}}\r\n                            />\r\n                        <ul className=\"user-options-list\">\r\n                            <li>\r\n                                <Tooltip placement=\"bottom\" title=\"Log Out\">\r\n                                    <Button type=\"primary\" size=\"large\" shape=\"circle\" onClick={this.logOut} className=\"logout-button\">\r\n                                        <Icon type=\"logout\" />\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </li>\r\n                            <li>\r\n                                <img src={main} alt=\"company logo\" className=\"d-logo\" />\r\n                            </li>\r\n                        </ul>\r\n                            \r\n                    </Header>\r\n                    <Content\r\n                        style={{\r\n                        margin: '24px 16px',\r\n                        padding: 24,\r\n                        marginTop:'80px',\r\n                        background: 'rgb(205,217,225)',\r\n                        minHeight: '100vh',\r\n                        marginLeft:'95px'\r\n                        }}\r\n                    >\r\n                        <div style={{ width:'100%', }}>\r\n                            {torender}\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout> \r\n        );\r\n    }\r\n   \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeActiveRoute,\r\n    login, \r\n    logout\r\n})(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}