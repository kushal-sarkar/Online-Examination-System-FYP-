{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainee\\\\register\\\\traineeregister.js\";\nimport React, { Component } from 'react';\nimport './trainerRegister.css';\nimport { Row, Col, Form, Icon, Input, Button, Select, Typography } from 'antd';\nimport queryString from 'query-string';\nimport apis from '../../../services/Apis';\nimport { Post } from '../../../services/axiosCall';\nimport Alert from '../../common/alert';\nconst Option = Select.Option;\nconst Title = Typography.Title;\n\nclass TraineeRegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          console.log(this.state.testid);\n          Post({\n            url: apis.REGISTER_TRAINEE_FOR_TEST,\n            data: {\n              name: values.name,\n              emailid: values.email,\n              contact: \"\".concat(values.prefix).concat(values.contact),\n              organisation: values.organisation,\n              testid: this.state.testid,\n              location: values.location\n            }\n          }).then(data => {\n            console.log(data.data);\n\n            if (data.data.success) {\n              this.setState({\n                inform: false,\n                user: data.data.user\n              });\n            } else {\n              this.props.form.resetFields();\n              Alert('error', 'Error!', data.data.message);\n            }\n          }).catch(error => {\n            console.log(error);\n            this.props.form.resetFields();\n            Alert('error', 'Error!', \"Server Error\");\n          });\n        }\n      });\n    };\n\n    this.resendMail = () => {\n      Post({\n        url: apis.RESEND_TRAINER_REGISTRATION_LINK,\n        data: {\n          id: this.state.user._id\n        }\n      }).then(response => {\n        if (response.data.success) {\n          Alert('success', 'Success!', \"Email has been sent to your email\");\n        } else {\n          Alert('error', 'Error!', response.data.message);\n        }\n      }).catch(error => {\n        console.log(error);\n        Alert('error', 'Error!', \"Server Error\");\n      });\n    };\n\n    this.state = {\n      inform: true,\n      testid: null,\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    let params = queryString.parse(this.props.location.search);\n    console.log(params);\n    this.setState({\n      testid: params.testid\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '+977',\n      rules: [{\n        required: true,\n        message: 'Please enter contact no prefix'\n      }]\n    })(React.createElement(Select, {\n      style: {\n        width: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"+91\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"+91\")));\n    return React.createElement(\"div\", {\n      className: \"trainee-registration-form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.inform ? React.createElement(\"div\", {\n      className: \"trainee-registration-form-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Name\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      rules: [{\n        required: true,\n        message: 'Please input your name'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Email Id\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"mail\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }),\n      placeholder: \"Email Id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Phone Number\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, getFieldDecorator('contact', {\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }, {\n        len: 10,\n        message: 'Contact number must be 10 digit long'\n      }]\n    })(React.createElement(Input, {\n      addonBefore: prefixSelector,\n      min: 10,\n      max: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Organisation\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, getFieldDecorator('organisation', {\n      rules: [{\n        required: true,\n        message: 'Please input your name'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"idcard\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }),\n      placeholder: \"Organisation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Location\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, getFieldDecorator('location', {\n      rules: [{\n        required: true,\n        message: 'Please input your name'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"home\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }),\n      placeholder: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        paddingTop: '33px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: '100%'\n      },\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Register\")))))) : React.createElement(\"div\", {\n      className: \"reasendmail-container-register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        color: '#fff'\n      },\n      level: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"An email containing your test link has been sent to \", this.state.user.emailid), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.resendMail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Resend Mail\")));\n  }\n\n}\n\nconst TraineeRegister = Form.create({\n  name: 'Trainee Registration'\n})(TraineeRegisterForm);\nexport default TraineeRegister;","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainee\\register\\traineeregister.js"],"names":["React","Component","Row","Col","Form","Icon","Input","Button","Select","Typography","queryString","apis","Post","Alert","Option","Title","TraineeRegisterForm","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","state","testid","url","REGISTER_TRAINEE_FOR_TEST","data","name","emailid","email","contact","prefix","organisation","location","then","success","setState","inform","user","resetFields","message","catch","error","resendMail","RESEND_TRAINER_REGISTRATION_LINK","id","_id","response","componentDidMount","params","parse","search","render","getFieldDecorator","prefixSelector","initialValue","rules","required","width","padding","color","type","len","paddingTop","TraineeRegister","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './trainerRegister.css';\r\nimport {Row,Col,Form, Icon, Input, Button,Select,Typography  } from 'antd';\r\nimport queryString from 'query-string';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nclass TraineeRegisterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            inform:true,\r\n            testid:null,\r\n            user:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let params = queryString.parse(this.props.location.search)\r\n        console.log(params)\r\n        this.setState({\r\n            testid:params.testid\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                console.log(this.state.testid);\r\n                Post({\r\n                    url:apis.REGISTER_TRAINEE_FOR_TEST,\r\n                    data:{\r\n                        name:values.name,\r\n                        emailid:values.email,\r\n                        contact:`${values.prefix}${values.contact}`,\r\n                        organisation:values.organisation,\r\n                        testid:this.state.testid,\r\n                        location:values.location\r\n                    }\r\n                }).then((data)=>{\r\n                    console.log(data.data);\r\n                    if(data.data.success){\r\n                        this.setState({\r\n                            inform:false,\r\n                            user:data.data.user\r\n                        })\r\n                    }\r\n                    else{\r\n                        this.props.form.resetFields();\r\n                        Alert('error','Error!',data.data.message);\r\n                    }\r\n                }).catch((error)=>{\r\n                    console.log(error);\r\n                    this.props.form.resetFields();\r\n                    Alert('error','Error!',\"Server Error\");\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    resendMail =()=>{\r\n        Post({\r\n            url:apis.RESEND_TRAINER_REGISTRATION_LINK,\r\n            data:{\r\n                id:this.state.user._id\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                Alert('success','Success!',\"Email has been sent to your email\");\r\n            }\r\n            else{\r\n                Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n            Alert('error','Error!',\"Server Error\");\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue :'+977',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n        );\r\n        return (\r\n            <div className=\"trainee-registration-form-wrapper\">\r\n                {this.state.inform?\r\n                    <div className=\"trainee-registration-form-inner\">\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Row>\r\n                                <Col span={12} style={{padding:'5px'}}>\r\n                                    <Form.Item label=\"Name\" hasFeedback>\r\n                                        {getFieldDecorator('name', {\r\n                                            rules: [{ required: true, message: 'Please input your name' }],\r\n                                        })(\r\n                                            <Input\r\n                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                            placeholder=\"Name\"\r\n                                            />,\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12} style={{padding:'5px'}}>\r\n                                    <Form.Item label=\"Email Id\" hasFeedback>\r\n                                        {getFieldDecorator('email', {\r\n                                            rules: [{\r\n                                                type: 'email',\r\n                                                message: 'The input is not valid E-mail!',\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input your E-mail!',\r\n                                            }],\r\n                                        })(\r\n                                            <Input\r\n                                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                            placeholder=\"Email Id\"\r\n                                            />,\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12} style={{padding:'5px'}}>\r\n                                    <Form.Item label=\"Phone Number\"  hasFeedback>\r\n                                        {getFieldDecorator('contact', {\r\n                                            rules: [{ \r\n                                                required: true, \r\n                                                message: 'Please input your phone number!' \r\n                                            },\r\n                                            {\r\n                                                len:10,\r\n                                                message:'Contact number must be 10 digit long'\r\n                                            }],\r\n                                        })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Organisation\" hasFeedback>\r\n                                        {getFieldDecorator('organisation', {\r\n                                            rules: [{ \r\n                                                    required: true, \r\n                                                    message: 'Please input your name',\r\n                                            }],\r\n                                        })(\r\n                                            <Input\r\n                                            prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                            placeholder=\"Organisation\"\r\n                                            />,\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12} style={{padding:'5px'}}>\r\n                                    <Form.Item label=\"Location\" hasFeedback>\r\n                                        {getFieldDecorator('location', {\r\n                                            rules: [{ required: true, message: 'Please input your name' }],\r\n                                        })(\r\n                                            <Input\r\n                                            prefix={<Icon type=\"home\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                            placeholder=\"Location\"\r\n                                            />,\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12} style={{paddingTop:'33px'}}>\r\n                                    <Form.Item>\r\n                                        <Button style={{width:'100%'}} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                            Register\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>              \r\n                        </Form>\r\n                    </div>:\r\n                    <div className=\"reasendmail-container-register\">\r\n                        <Title style={{color:'#fff'}} level={4}>An email containing your test link has been sent to {this.state.user.emailid}</Title>\r\n                        <Button type=\"primary\" onClick={this.resendMail}>Resend Mail</Button>\r\n                    </div>}\r\n                </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst TraineeRegister = Form.create({ name: 'Trainee Registration' })(TraineeRegisterForm);\r\nexport default TraineeRegister;"]},"metadata":{},"sourceType":"module"}