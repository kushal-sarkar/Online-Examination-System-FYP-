{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainer\\\\conducttest\\\\questions.js\";\nimport React, { Component } from 'react';\nimport apis from '../../../services/Apis';\nimport { SecurePost } from '../../../services/axiosCall';\nimport Alert from '../../common/alert';\nimport { Button, Row, Col } from 'antd';\nimport './conducttes.css';\nexport default class Questions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshquestionList = () => {\n      this.setState({\n        loading: true\n      });\n      SecurePost({\n        url: \"\".concat(apis.GET_TEST_QUESTIONS),\n        data: {\n          id: this.props.id\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.success) {\n          this.props.updateQuestiosnTest(response.data.data);\n        } else {\n          Alert('error', 'Error!', response.data.message);\n        }\n\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error);\n        Alert('error', 'Error!', 'Server Error');\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.refreshquestionList();\n  }\n\n  render() {\n    const aMap = ['A', 'B', 'C', 'D', 'E'];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.questionsOfTest.map((d, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        style: {\n          paddingBottom: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        shape: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, i + 1)), React.createElement(Col, {\n        span: d.quesimg ? 6 : 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"unable to load\",\n        src: d.quesimg,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: d.quesimg ? 16 : 22,\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, d.body)), React.createElement(Col, {\n        span: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, d.weightage), React.createElement(Col, {\n        offset: 1,\n        span: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, d.options.map((dd, ii) => {\n        return React.createElement(Col, {\n          key: ii,\n          span: 12,\n          style: {\n            paddingBottom: '30px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, dd.isAnswer ? React.createElement(Button, {\n          className: \"green\",\n          shape: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, aMap[ii]) : React.createElement(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, aMap[ii])), React.createElement(Col, {\n          offset: 1,\n          span: dd.optimg ? 8 : 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"unable to load\",\n          src: dd.optimg,\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        })), React.createElement(Col, {\n          offset: 1,\n          span: dd.optimg ? 12 : 21,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, dd.optbody))));\n      })))));\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainer\\conducttest\\questions.js"],"names":["React","Component","apis","SecurePost","Alert","Button","Row","Col","Questions","constructor","props","refreshquestionList","setState","loading","url","GET_TEST_QUESTIONS","data","id","then","response","console","log","success","updateQuestiosnTest","message","catch","error","state","componentDidMount","render","aMap","questionsOfTest","map","d","i","paddingBottom","quesimg","width","padding","body","weightage","options","dd","ii","isAnswer","optimg","optbody"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport {Button,Row,Col  } from 'antd';\r\nimport './conducttes.css';\r\n\r\n\r\n\r\n\r\nexport default class Questions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshquestionList();\r\n    }   \r\n\r\n    refreshquestionList = ()=>{\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        SecurePost({\r\n            url:`${apis.GET_TEST_QUESTIONS}`,\r\n            data:{\r\n                id:this.props.id\r\n            }\r\n        }).then((response)=>{\r\n            console.log(response);\r\n            if(response.data.success){\r\n                this.props.updateQuestiosnTest(response.data.data);\r\n            }\r\n            else{\r\n                Alert('error','Error!',response.data.message)\r\n            }\r\n            this.setState({\r\n                loading:false\r\n            })\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n            Alert('error','Error!','Server Error')\r\n            this.setState({\r\n                loading:false\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const aMap = ['A','B','C','D','E'];\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.questionsOfTest.map((d,i)=>{\r\n                        return(\r\n                            <div  key={i} style={{paddingBottom:'50px'}}>\r\n                                <Row>\r\n                                    <Col span={1}>\r\n                                        <Button type=\"primary\" shape=\"circle\" >{i+1}</Button>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?6:0}>\r\n                                        <img alt=\"unable to load\" src={d.quesimg} style={{width:'100%'}}/>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?16:22} style={{padding:'10px'}}>\r\n                                        <b>{d.body}</b>\r\n                                    </Col>\r\n                                    <Col span={1}>\r\n                                        {d.weightage}\r\n                                    </Col>\r\n                                    <Col offset={1} span={23}>\r\n                                        <Row>\r\n                                            {d.options.map((dd,ii)=>{\r\n                                                return(\r\n                                                    <Col key={ii} span={12} style={{paddingBottom:'30px'}}>\r\n                                                        <Row>\r\n                                                            <Col span={1}>\r\n                                                            {\r\n                                                                dd.isAnswer?<Button className=\"green\" shape=\"circle\">{aMap[ii]}</Button>:<Button type=\"primary\" shape=\"circle\">{aMap[ii]}</Button>\r\n                                                            }\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?8:0}>\r\n                                                                <img alt=\"unable to load\" src={dd.optimg} style={{width:'100%'}} />\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?12:21}>\r\n                                                                <p>{dd.optbody}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                )\r\n                                            })}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row> \r\n                            </div> \r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}