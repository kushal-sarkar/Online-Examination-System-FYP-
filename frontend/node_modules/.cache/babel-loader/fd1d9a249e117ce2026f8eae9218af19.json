{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online-Examination-System-master\\\\Online-Examination-System-master\\\\frontend\\\\src\\\\components\\\\trainer\\\\conducttest\\\\details.js\";\nimport React from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Input, Button, Descriptions, Icon, message } from 'antd';\nimport { changeTestRegisterLink, updateCurrentTestBasicDetails, changeTestRegisterStatus, changeTestStatus, updateCandidatesTest } from '../../../actions/conductTest';\nimport { connect } from 'react-redux';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../common/alert';\n\nclass TestDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changeRegistrationStatus = d => {\n      SecurePost({\n        url: \"\".concat(apis.STOP_REGISTRATION),\n        data: {\n          id: this.props.conduct.id,\n          status: d\n        }\n      }).then(response => {\n        if (response.data.success) {\n          this.props.changeTestRegisterStatus(d);\n          Alert('success', 'Success!', 'Registration status changed');\n        } else {\n          Alert('error', 'Error!', response.data.message);\n        }\n      }).catch(error => {\n        console.log(error);\n        Alert('error', 'Error!', 'Server Error');\n      });\n    };\n\n    this.changeTestStatus = () => {\n      SecurePost({\n        url: \"\".concat(apis.START_TEST_BY_TRAINER),\n        data: {\n          id: this.props.conduct.id\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.success) {\n          this.props.changeTestStatus(response.data.data);\n          Alert('success', 'Success!', 'Test has begin');\n        } else {\n          Alert('error', 'Error!', response.data.message);\n        }\n      }).catch(error => {\n        console.log(error);\n        Alert('error', 'Error!', 'Server Error');\n      });\n    };\n\n    this.endTestByTrainee = () => {\n      SecurePost({\n        url: \"\".concat(apis.END_TEST_BY_TRAINER),\n        data: {\n          id: this.props.conduct.id\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.success) {\n          this.props.changeTestStatus(response.data.data);\n          Alert('success', 'Success!', 'Test has ended');\n        } else {\n          Alert('error', 'Error!', response.data.message);\n        }\n      }).catch(error => {\n        console.log(error);\n        Alert('error', 'Error!', 'Server Error');\n      });\n    };\n\n    this.getCandidates = () => {\n      SecurePost({\n        url: \"\".concat(apis.GET_TEST_CANDIDATES),\n        data: {\n          id: this.props.conduct.id\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    var link = window.location.href.split('/').splice(0, 3);\n    var mainlink = \"\";\n    link.forEach((d, i) => {\n      mainlink = mainlink + d + \"/\";\n    });\n    mainlink = mainlink + \"trainee/register?testid=\".concat(this.props.conduct.id);\n    this.props.changeTestRegisterLink(mainlink);\n    this.props.updateCurrentTestBasicDetails(this.props.conduct.id);\n    this.props.updateCandidatesTest();\n  }\n\n  render() {\n    console.log(this.props.conduct.basictestdetails.testbegins);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Descriptions, {\n      size: \"small\",\n      column: 4,\n      title: \"Basic Test Info\",\n      layout: \"vertical\",\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Descriptions.Item, {\n      span: 1,\n      label: \"Test Id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.props.conduct.id), React.createElement(Descriptions.Item, {\n      span: 3,\n      label: \"Registration Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      value: this.props.conduct.testRegisterLink,\n      addonAfter: React.createElement(CopyToClipboard, {\n        text: this.props.conduct.testRegisterLink,\n        onCopy: () => message.success('Link Copied to clipboard'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"copy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Descriptions.Item, {\n      span: 1,\n      label: this.props.conduct.basictestdetails.isRegistrationavailable ? \"Registration Open\" : \"Registration Closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.props.conduct.basictestdetails.testbegins,\n      onClick: () => {\n        this.changeRegistrationStatus(!this.props.conduct.basictestdetails.isRegistrationavailable);\n      },\n      type: this.props.conduct.basictestdetails.isRegistrationavailable ? \"danger\" : \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.props.conduct.basictestdetails.isRegistrationavailable ? \"Stop Registration\" : \"Open Registration\")), React.createElement(Descriptions.Item, {\n      span: 3,\n      label: this.props.conduct.basictestdetails.testbegins ? \"Test on Progress\" : \"Test has not started yet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.props.conduct.basictestdetails.testbegins,\n      onClick: () => {\n        this.changeTestStatus();\n      },\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Start Test\"), React.createElement(Button, {\n      disabled: !this.props.conduct.basictestdetails.testbegins,\n      onClick: () => {\n        this.endTestByTrainee();\n      },\n      type: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"End Test\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trainer: state.trainer,\n  conduct: state.conduct\n});\n\nexport default connect(mapStateToProps, {\n  changeTestRegisterLink,\n  updateCurrentTestBasicDetails,\n  changeTestRegisterStatus,\n  changeTestStatus,\n  updateCandidatesTest\n})(TestDetails);","map":{"version":3,"sources":["D:\\Online-Examination-System-master\\Online-Examination-System-master\\frontend\\src\\components\\trainer\\conducttest\\details.js"],"names":["React","CopyToClipboard","Input","Button","Descriptions","Icon","message","changeTestRegisterLink","updateCurrentTestBasicDetails","changeTestRegisterStatus","changeTestStatus","updateCandidatesTest","connect","SecurePost","apis","Alert","TestDetails","Component","changeRegistrationStatus","d","url","STOP_REGISTRATION","data","id","props","conduct","status","then","response","success","catch","error","console","log","START_TEST_BY_TRAINER","endTestByTrainee","END_TEST_BY_TRAINER","getCandidates","GET_TEST_CANDIDATES","componentDidMount","link","window","location","href","split","splice","mainlink","forEach","i","render","basictestdetails","testbegins","testRegisterLink","isRegistrationavailable","mapStateToProps","state","trainer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { Input,Button,Descriptions, Icon,message   } from 'antd';\r\nimport {changeTestRegisterLink,updateCurrentTestBasicDetails,changeTestRegisterStatus,changeTestStatus,updateCandidatesTest} from '../../../actions/conductTest';\r\nimport { connect } from 'react-redux';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\n\r\nclass TestDetails extends React.Component {\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d,i)=>{\r\n            mainlink=mainlink+d+\"/\"\r\n        });\r\n        mainlink=mainlink+`trainee/register?testid=${this.props.conduct.id}`\r\n        this.props.changeTestRegisterLink(mainlink);\r\n        this.props.updateCurrentTestBasicDetails(this.props.conduct.id);\r\n        this.props.updateCandidatesTest();\r\n    }\r\n\r\n    changeRegistrationStatus=(d)=>{\r\n        SecurePost({\r\n            url:`${apis.STOP_REGISTRATION}`,\r\n            data:{\r\n                id:this.props.conduct.id,\r\n                status:d\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                this.props.changeTestRegisterStatus(d)\r\n                Alert('success','Success!','Registration status changed');\r\n            }\r\n            else{\r\n                Alert('error','Error!',response.data.message)\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n            Alert('error','Error!','Server Error')\r\n        })\r\n    }\r\n\r\n    changeTestStatus = ()=>{\r\n        SecurePost({\r\n            url:`${apis.START_TEST_BY_TRAINER}`,\r\n            data:{\r\n                id:this.props.conduct.id\r\n            }\r\n        }).then((response)=>{\r\n            console.log(response);\r\n            if(response.data.success){\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success','Success!','Test has begin');\r\n            }\r\n            else{\r\n                Alert('error','Error!',response.data.message)\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n            Alert('error','Error!','Server Error')\r\n        })\r\n    }\r\n\r\n    endTestByTrainee = ()=>{\r\n        SecurePost({\r\n            url:`${apis.END_TEST_BY_TRAINER}`,\r\n            data:{\r\n                id:this.props.conduct.id\r\n            }\r\n        }).then((response)=>{\r\n            console.log(response);\r\n            if(response.data.success){\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success','Success!','Test has ended');\r\n            }\r\n            else{\r\n                Alert('error','Error!',response.data.message)\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n            Alert('error','Error!','Server Error')\r\n        }) \r\n    }\r\n\r\n\r\n    getCandidates = ()=>{\r\n        SecurePost({\r\n            url:`${apis.GET_TEST_CANDIDATES}`,\r\n            data:{\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response)=>{\r\n            console.log(response);\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        console.log(this.props.conduct.basictestdetails.testbegins);\r\n        return (\r\n            <div>\r\n                <Descriptions size=\"small\" column={4} title=\"Basic Test Info\" layout=\"vertical\" bordered={true}>\r\n                    <Descriptions.Item span={1} label=\"Test Id\">{this.props.conduct.id}</Descriptions.Item>\r\n                    <Descriptions.Item span={3} label=\"Registration Link\"><Input disabled={true} value={this.props.conduct.testRegisterLink} addonAfter={<CopyToClipboard text={this.props.conduct.testRegisterLink} onCopy={()=>message.success('Link Copied to clipboard')}><Icon type=\"copy\"/></CopyToClipboard>}/></Descriptions.Item>\r\n                    <Descriptions.Item span={1} label={this.props.conduct.basictestdetails.isRegistrationavailable?\"Registration Open\":\"Registration Closed\"}><Button disabled={this.props.conduct.basictestdetails.testbegins} onClick={()=>{this.changeRegistrationStatus(!this.props.conduct.basictestdetails.isRegistrationavailable)}} type={this.props.conduct.basictestdetails.isRegistrationavailable?\"danger\":\"primary\"}>{this.props.conduct.basictestdetails.isRegistrationavailable?\"Stop Registration\":\"Open Registration\"}</Button></Descriptions.Item>\r\n                    <Descriptions.Item span={3} label={this.props.conduct.basictestdetails.testbegins?\"Test on Progress\":\"Test has not started yet\"}><Button  disabled={this.props.conduct.basictestdetails.testbegins} onClick={()=>{this.changeTestStatus()}} type={\"primary\"}>Start Test</Button><Button  disabled={!this.props.conduct.basictestdetails.testbegins} onClick={()=>{this.endTestByTrainee()}} type={\"danger\"}>End Test</Button></Descriptions.Item>\r\n                </Descriptions>            \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    conduct : state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n})(TestDetails);"]},"metadata":{},"sourceType":"module"}